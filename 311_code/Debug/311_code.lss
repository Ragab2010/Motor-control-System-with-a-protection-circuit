
311_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001aa  00800060  000010ee  00001182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000016b  0080020a  0080020a  0000132c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000132c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001388  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000013c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012c2  00000000  00000000  00001514  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000abb  00000000  00000000  000027d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000af9  00000000  00000000  00003291  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b0  00000000  00000000  00003d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062e  00000000  00000000  0000413c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000da8  00000000  00000000  0000476a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00005512  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	ee c1       	rjmp	.+988    	; 0x3e4 <__vector_3>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
      12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	12 e0       	ldi	r17, 0x02	; 2
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	ee ee       	ldi	r30, 0xEE	; 238
      3a:	f0 e1       	ldi	r31, 0x10	; 16
      3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0
      42:	aa 30       	cpi	r26, 0x0A	; 10
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
      48:	23 e0       	ldi	r18, 0x03	; 3
      4a:	aa e0       	ldi	r26, 0x0A	; 10
      4c:	b2 e0       	ldi	r27, 0x02	; 2
      4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
      50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
      52:	a5 37       	cpi	r26, 0x75	; 117
      54:	b2 07       	cpc	r27, r18
      56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
      58:	fe d1       	rcall	.+1020   	; 0x456 <main>
      5a:	47 c8       	rjmp	.-3954   	; 0xfffff0ea <__eeprom_end+0xff7ef0ea>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <adc_init>:
#include "ADC.h"

 // Code is from lab 7 NEED to edit.

 void adc_init(void){
	 ADMUX = 0x40;
      5e:	80 e4       	ldi	r24, 0x40	; 64
      60:	87 b9       	out	0x07, r24	; 7
	 ADCSRA = 0x80;
      62:	80 e8       	ldi	r24, 0x80	; 128
      64:	86 b9       	out	0x06, r24	; 6
      66:	08 95       	ret

00000068 <ADC_convert_channel_to_millivolts>:

 // This function converts an ADC channel and returns the result in millivolts 
 uint16_t ADC_convert_channel_to_millivolts(uint8_t channel) { 

	// Set the channel we wish to convert
	channel &=0x07;
      68:	87 70       	andi	r24, 0x07	; 7
	DDRC &=~(1<<channel);
      6a:	94 b3       	in	r25, 0x14	; 20
      6c:	21 e0       	ldi	r18, 0x01	; 1
      6e:	30 e0       	ldi	r19, 0x00	; 0
      70:	08 2e       	mov	r0, r24
      72:	02 c0       	rjmp	.+4      	; 0x78 <ADC_convert_channel_to_millivolts+0x10>
      74:	22 0f       	add	r18, r18
      76:	33 1f       	adc	r19, r19
      78:	0a 94       	dec	r0
      7a:	e2 f7       	brpl	.-8      	; 0x74 <ADC_convert_channel_to_millivolts+0xc>
      7c:	20 95       	com	r18
      7e:	29 23       	and	r18, r25
      80:	24 bb       	out	0x14, r18	; 20
	ADMUX |= channel ;
      82:	97 b1       	in	r25, 0x07	; 7
      84:	89 2b       	or	r24, r25
      86:	87 b9       	out	0x07, r24	; 7

	// Start the conversion
	ADCSRA |= (1 << ADSC);
      88:	36 9a       	sbi	0x06, 6	; 6

	// Wait for the conversion to finish
	while ((ADCSRA & (1 << ADIF)) == 0) {
      8a:	34 9b       	sbis	0x06, 4	; 6
      8c:	fe cf       	rjmp	.-4      	; 0x8a <ADC_convert_channel_to_millivolts+0x22>
		;
	}
	// Read out the ADC counts
	uint16_t adc_count = (ADCL << 0) | (ADCH << 8);
      8e:	84 b1       	in	r24, 0x04	; 4
      90:	25 b1       	in	r18, 0x05	; 5

	// Convert the counts to millivolts (use 32 bits to prevent overflow)
//	uint32_t millivolts = (uint32_t)adc_count * (uint32_t)5000 / 1024;
	//millivolts += 100;

	return (uint16_t)adc_count;
      92:	90 e0       	ldi	r25, 0x00	; 0
 }
      94:	92 2b       	or	r25, r18
      96:	08 95       	ret

00000098 <ADC_Read_calculate_Vrms_Irms_Prms>:

void ADC_Read_calculate_Vrms_Irms_Prms(float *pv , float *pi , float *pp , float *Vrms , float *Irms , float *Prms ){
      98:	2f 92       	push	r2
      9a:	3f 92       	push	r3
      9c:	4f 92       	push	r4
      9e:	5f 92       	push	r5
      a0:	6f 92       	push	r6
      a2:	7f 92       	push	r7
      a4:	8f 92       	push	r8
      a6:	9f 92       	push	r9
      a8:	af 92       	push	r10
      aa:	bf 92       	push	r11
      ac:	cf 92       	push	r12
      ae:	df 92       	push	r13
      b0:	ef 92       	push	r14
      b2:	ff 92       	push	r15
      b4:	0f 93       	push	r16
      b6:	1f 93       	push	r17
      b8:	cf 93       	push	r28
      ba:	df 93       	push	r29
      bc:	cd b7       	in	r28, 0x3d	; 61
      be:	de b7       	in	r29, 0x3e	; 62
      c0:	28 97       	sbiw	r28, 0x08	; 8
      c2:	0f b6       	in	r0, 0x3f	; 63
      c4:	f8 94       	cli
      c6:	de bf       	out	0x3e, r29	; 62
      c8:	0f be       	out	0x3f, r0	; 63
      ca:	cd bf       	out	0x3d, r28	; 61
      cc:	9c 83       	std	Y+4, r25	; 0x04
      ce:	8b 83       	std	Y+3, r24	; 0x03
      d0:	59 01       	movw	r10, r18
      d2:	7e 83       	std	Y+6, r23	; 0x06
      d4:	6d 83       	std	Y+5, r22	; 0x05
      d6:	6c 01       	movw	r12, r24
      d8:	24 2e       	mov	r2, r20
      da:	35 2e       	mov	r3, r21
      dc:	4b 01       	movw	r8, r22
      de:	84 e1       	ldi	r24, 0x14	; 20
      e0:	88 0e       	add	r8, r24
      e2:	91 1c       	adc	r9, r1
      e4:	44 2e       	mov	r4, r20
      e6:	55 2e       	mov	r5, r21
      e8:	36 01       	movw	r6, r12
      ea:	7a 83       	std	Y+2, r23	; 0x02
      ec:	69 83       	std	Y+1, r22	; 0x01
      ee:	78 87       	std	Y+8, r23	; 0x08
      f0:	6f 83       	std	Y+7, r22	; 0x07
	uint8_t i;
	uint16_t temp=0;
	for(i=0 ; i<5;i++ )
	{
		temp=ADC_convert_channel_to_millivolts(0);
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	b9 df       	rcall	.-142    	; 0x68 <ADC_convert_channel_to_millivolts>
		
		pv[i] =(float)((temp * 5)/1024);//vin =((Dout*Vref)/1024)  Vref =5v , 10bit resluation =1024
      f6:	bc 01       	movw	r22, r24
      f8:	66 0f       	add	r22, r22
      fa:	77 1f       	adc	r23, r23
      fc:	66 0f       	add	r22, r22
      fe:	77 1f       	adc	r23, r23
     100:	86 0f       	add	r24, r22
     102:	97 1f       	adc	r25, r23
     104:	bc 01       	movw	r22, r24
     106:	67 2f       	mov	r22, r23
     108:	77 27       	eor	r23, r23
     10a:	66 95       	lsr	r22
     10c:	66 95       	lsr	r22
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	5b d3       	rcall	.+1718   	; 0x7ca <__floatunsisf>
     114:	7a 82       	std	Y+2, r7	; 0x02
     116:	69 82       	std	Y+1, r6	; 0x01
     118:	f3 01       	movw	r30, r6
     11a:	61 93       	st	Z+, r22
     11c:	71 93       	st	Z+, r23
     11e:	81 93       	st	Z+, r24
     120:	91 93       	st	Z+, r25
     122:	3f 01       	movw	r6, r30
		pi[i] =(float)pv[i]/100;
     124:	20 e0       	ldi	r18, 0x00	; 0
     126:	30 e0       	ldi	r19, 0x00	; 0
     128:	48 ec       	ldi	r20, 0xC8	; 200
     12a:	52 e4       	ldi	r21, 0x42	; 66
     12c:	b5 d2       	rcall	.+1386   	; 0x698 <__divsf3>
     12e:	9b 01       	movw	r18, r22
     130:	ac 01       	movw	r20, r24
     132:	ef 81       	ldd	r30, Y+7	; 0x07
     134:	f8 85       	ldd	r31, Y+8	; 0x08
     136:	61 93       	st	Z+, r22
     138:	71 93       	st	Z+, r23
     13a:	81 93       	st	Z+, r24
     13c:	91 93       	st	Z+, r25
     13e:	f8 87       	std	Y+8, r31	; 0x08
     140:	ef 83       	std	Y+7, r30	; 0x07
		pp[i] = pv[i]*pi[i];
     142:	e9 81       	ldd	r30, Y+1	; 0x01
     144:	fa 81       	ldd	r31, Y+2	; 0x02
     146:	60 81       	ld	r22, Z
     148:	71 81       	ldd	r23, Z+1	; 0x01
     14a:	82 81       	ldd	r24, Z+2	; 0x02
     14c:	93 81       	ldd	r25, Z+3	; 0x03
     14e:	fd d3       	rcall	.+2042   	; 0x94a <__mulsf3>
     150:	f2 01       	movw	r30, r4
     152:	61 93       	st	Z+, r22
     154:	71 93       	st	Z+, r23
     156:	81 93       	st	Z+, r24
     158:	91 93       	st	Z+, r25
     15a:	2f 01       	movw	r4, r30
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15c:	83 ec       	ldi	r24, 0xC3	; 195
     15e:	99 e0       	ldi	r25, 0x09	; 9
     160:	01 97       	sbiw	r24, 0x01	; 1
     162:	f1 f7       	brne	.-4      	; 0x160 <ADC_Read_calculate_Vrms_Irms_Prms+0xc8>
     164:	00 c0       	rjmp	.+0      	; 0x166 <ADC_Read_calculate_Vrms_Irms_Prms+0xce>
     166:	00 00       	nop
 }

void ADC_Read_calculate_Vrms_Irms_Prms(float *pv , float *pi , float *pp , float *Vrms , float *Irms , float *Prms ){
	uint8_t i;
	uint16_t temp=0;
	for(i=0 ; i<5;i++ )
     168:	ef 81       	ldd	r30, Y+7	; 0x07
     16a:	f8 85       	ldd	r31, Y+8	; 0x08
     16c:	e8 15       	cp	r30, r8
     16e:	f9 05       	cpc	r31, r9
     170:	09 f0       	breq	.+2      	; 0x174 <ADC_Read_calculate_Vrms_Irms_Prms+0xdc>
     172:	bf cf       	rjmp	.-130    	; 0xf2 <ADC_Read_calculate_Vrms_Irms_Prms+0x5a>
     174:	8b 81       	ldd	r24, Y+3	; 0x03
     176:	9c 81       	ldd	r25, Y+4	; 0x04
     178:	44 96       	adiw	r24, 0x14	; 20
     17a:	8d 80       	ldd	r8, Y+5	; 0x05
     17c:	9e 80       	ldd	r9, Y+6	; 0x06
     17e:	9a 83       	std	Y+2, r25	; 0x02
     180:	89 83       	std	Y+1, r24	; 0x01
		pp[i] = pv[i]*pi[i];
		_delay_ms(10);
	}
		for(i=0 ; i<5;i++ )
		{
			*Vrms +=pv[i];
     182:	f6 01       	movw	r30, r12
     184:	21 91       	ld	r18, Z+
     186:	31 91       	ld	r19, Z+
     188:	41 91       	ld	r20, Z+
     18a:	51 91       	ld	r21, Z+
     18c:	6f 01       	movw	r12, r30
     18e:	f5 01       	movw	r30, r10
     190:	60 81       	ld	r22, Z
     192:	71 81       	ldd	r23, Z+1	; 0x01
     194:	82 81       	ldd	r24, Z+2	; 0x02
     196:	93 81       	ldd	r25, Z+3	; 0x03
     198:	17 d2       	rcall	.+1070   	; 0x5c8 <__addsf3>
     19a:	f5 01       	movw	r30, r10
     19c:	60 83       	st	Z, r22
     19e:	71 83       	std	Z+1, r23	; 0x01
     1a0:	82 83       	std	Z+2, r24	; 0x02
     1a2:	93 83       	std	Z+3, r25	; 0x03
			*Irms +=pi[i];
     1a4:	f4 01       	movw	r30, r8
     1a6:	21 91       	ld	r18, Z+
     1a8:	31 91       	ld	r19, Z+
     1aa:	41 91       	ld	r20, Z+
     1ac:	51 91       	ld	r21, Z+
     1ae:	4f 01       	movw	r8, r30
     1b0:	f8 01       	movw	r30, r16
     1b2:	60 81       	ld	r22, Z
     1b4:	71 81       	ldd	r23, Z+1	; 0x01
     1b6:	82 81       	ldd	r24, Z+2	; 0x02
     1b8:	93 81       	ldd	r25, Z+3	; 0x03
     1ba:	06 d2       	rcall	.+1036   	; 0x5c8 <__addsf3>
     1bc:	f8 01       	movw	r30, r16
     1be:	60 83       	st	Z, r22
     1c0:	71 83       	std	Z+1, r23	; 0x01
     1c2:	82 83       	std	Z+2, r24	; 0x02
     1c4:	93 83       	std	Z+3, r25	; 0x03
			*Prms +=pp[i];
     1c6:	f1 01       	movw	r30, r2
     1c8:	21 91       	ld	r18, Z+
     1ca:	31 91       	ld	r19, Z+
     1cc:	41 91       	ld	r20, Z+
     1ce:	51 91       	ld	r21, Z+
     1d0:	1f 01       	movw	r2, r30
     1d2:	f7 01       	movw	r30, r14
     1d4:	60 81       	ld	r22, Z
     1d6:	71 81       	ldd	r23, Z+1	; 0x01
     1d8:	82 81       	ldd	r24, Z+2	; 0x02
     1da:	93 81       	ldd	r25, Z+3	; 0x03
     1dc:	f5 d1       	rcall	.+1002   	; 0x5c8 <__addsf3>
     1de:	f7 01       	movw	r30, r14
     1e0:	60 83       	st	Z, r22
     1e2:	71 83       	std	Z+1, r23	; 0x01
     1e4:	82 83       	std	Z+2, r24	; 0x02
     1e6:	93 83       	std	Z+3, r25	; 0x03
		pv[i] =(float)((temp * 5)/1024);//vin =((Dout*Vref)/1024)  Vref =5v , 10bit resluation =1024
		pi[i] =(float)pv[i]/100;
		pp[i] = pv[i]*pi[i];
		_delay_ms(10);
	}
		for(i=0 ; i<5;i++ )
     1e8:	89 81       	ldd	r24, Y+1	; 0x01
     1ea:	9a 81       	ldd	r25, Y+2	; 0x02
     1ec:	c8 16       	cp	r12, r24
     1ee:	d9 06       	cpc	r13, r25
     1f0:	41 f6       	brne	.-112    	; 0x182 <ADC_Read_calculate_Vrms_Irms_Prms+0xea>
		{
			*Vrms +=pv[i];
			*Irms +=pi[i];
			*Prms +=pp[i];
		}
		*Vrms =sqrt(*Vrms);
     1f2:	f5 01       	movw	r30, r10
     1f4:	60 81       	ld	r22, Z
     1f6:	71 81       	ldd	r23, Z+1	; 0x01
     1f8:	82 81       	ldd	r24, Z+2	; 0x02
     1fa:	93 81       	ldd	r25, Z+3	; 0x03
     1fc:	0d d4       	rcall	.+2074   	; 0xa18 <sqrt>
     1fe:	f5 01       	movw	r30, r10
     200:	60 83       	st	Z, r22
     202:	71 83       	std	Z+1, r23	; 0x01
     204:	82 83       	std	Z+2, r24	; 0x02
     206:	93 83       	std	Z+3, r25	; 0x03
		*Irms =sqrt(*Irms);
     208:	f8 01       	movw	r30, r16
     20a:	60 81       	ld	r22, Z
     20c:	71 81       	ldd	r23, Z+1	; 0x01
     20e:	82 81       	ldd	r24, Z+2	; 0x02
     210:	93 81       	ldd	r25, Z+3	; 0x03
     212:	02 d4       	rcall	.+2052   	; 0xa18 <sqrt>
     214:	f8 01       	movw	r30, r16
     216:	60 83       	st	Z, r22
     218:	71 83       	std	Z+1, r23	; 0x01
     21a:	82 83       	std	Z+2, r24	; 0x02
     21c:	93 83       	std	Z+3, r25	; 0x03
		*Prms =sqrt(*Prms);
     21e:	f7 01       	movw	r30, r14
     220:	60 81       	ld	r22, Z
     222:	71 81       	ldd	r23, Z+1	; 0x01
     224:	82 81       	ldd	r24, Z+2	; 0x02
     226:	93 81       	ldd	r25, Z+3	; 0x03
     228:	f7 d3       	rcall	.+2030   	; 0xa18 <sqrt>
     22a:	f7 01       	movw	r30, r14
     22c:	60 83       	st	Z, r22
     22e:	71 83       	std	Z+1, r23	; 0x01
     230:	82 83       	std	Z+2, r24	; 0x02
     232:	93 83       	std	Z+3, r25	; 0x03
}
     234:	28 96       	adiw	r28, 0x08	; 8
     236:	0f b6       	in	r0, 0x3f	; 63
     238:	f8 94       	cli
     23a:	de bf       	out	0x3e, r29	; 62
     23c:	0f be       	out	0x3f, r0	; 63
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	1f 91       	pop	r17
     246:	0f 91       	pop	r16
     248:	ff 90       	pop	r15
     24a:	ef 90       	pop	r14
     24c:	df 90       	pop	r13
     24e:	cf 90       	pop	r12
     250:	bf 90       	pop	r11
     252:	af 90       	pop	r10
     254:	9f 90       	pop	r9
     256:	8f 90       	pop	r8
     258:	7f 90       	pop	r7
     25a:	6f 90       	pop	r6
     25c:	5f 90       	pop	r5
     25e:	4f 90       	pop	r4
     260:	3f 90       	pop	r3
     262:	2f 90       	pop	r2
     264:	08 95       	ret

00000266 <CIR_timer2_interrupt_init>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "CIR_PROT.h"

void CIR_timer2_interrupt_init(){
	TCCR2 =(1<<WGM21)|(1<<CS20)|(1<<CS21);
     266:	8b e0       	ldi	r24, 0x0B	; 11
     268:	85 bd       	out	0x25, r24	; 37
	TIMSK |=(1<<OCIE2);
     26a:	89 b7       	in	r24, 0x39	; 57
     26c:	80 68       	ori	r24, 0x80	; 128
     26e:	89 bf       	out	0x39, r24	; 57
	OCR2 =249;
     270:	89 ef       	ldi	r24, 0xF9	; 249
     272:	83 bd       	out	0x23, r24	; 35
	sei();
     274:	78 94       	sei
     276:	08 95       	ret

00000278 <PWMA_ON>:
void PWM_Delay_Mode_ONB(void)
{
	//TCCR1A |= (1 << COM1A1);
	TCCR1A |= (1 << COM1B1);
	//OCR1A = 255;
	OCR1B = 255;
     278:	8f b5       	in	r24, 0x2f	; 47
     27a:	80 68       	ori	r24, 0x80	; 128
     27c:	8f bd       	out	0x2f, r24	; 47
     27e:	80 e4       	ldi	r24, 0x40	; 64
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	9b bd       	out	0x2b, r25	; 43
     284:	8a bd       	out	0x2a, r24	; 42
     286:	08 95       	ret

00000288 <PWMB_ON>:
     288:	8f b5       	in	r24, 0x2f	; 47
     28a:	80 62       	ori	r24, 0x20	; 32
     28c:	8f bd       	out	0x2f, r24	; 47
     28e:	80 e4       	ldi	r24, 0x40	; 64
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	99 bd       	out	0x29, r25	; 41
     294:	88 bd       	out	0x28, r24	; 40
     296:	08 95       	ret

00000298 <PWMA_OFF>:
     298:	8f b5       	in	r24, 0x2f	; 47
     29a:	8f 77       	andi	r24, 0x7F	; 127
     29c:	8f bd       	out	0x2f, r24	; 47
     29e:	1b bc       	out	0x2b, r1	; 43
     2a0:	1a bc       	out	0x2a, r1	; 42
     2a2:	08 95       	ret

000002a4 <PWMB_OFF>:
     2a4:	8f b5       	in	r24, 0x2f	; 47
     2a6:	8f 7d       	andi	r24, 0xDF	; 223
     2a8:	8f bd       	out	0x2f, r24	; 47
     2aa:	19 bc       	out	0x29, r1	; 41
     2ac:	18 bc       	out	0x28, r1	; 40
     2ae:	08 95       	ret

000002b0 <PWM_dutyCycle_PWMB>:
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	9c 01       	movw	r18, r24
     2b4:	22 0f       	add	r18, r18
     2b6:	33 1f       	adc	r19, r19
     2b8:	22 0f       	add	r18, r18
     2ba:	33 1f       	adc	r19, r19
     2bc:	82 0f       	add	r24, r18
     2be:	93 1f       	adc	r25, r19
     2c0:	6a e0       	ldi	r22, 0x0A	; 10
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	ee d3       	rcall	.+2012   	; 0xaa2 <__divmodhi4>
     2c6:	79 bd       	out	0x29, r23	; 41
     2c8:	68 bd       	out	0x28, r22	; 40
     2ca:	08 95       	ret

000002cc <PWM_dutyCycle_PWMA>:
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	9b bd       	out	0x2b, r25	; 43
     2d0:	8a bd       	out	0x2a, r24	; 42
     2d2:	08 95       	ret

000002d4 <Double_PWM_initialise>:
{
	//Duty cycle 
	// 128 = 50%
	// 64  = 75%

	DDRB |= (1 << DDB1);
     2d4:	b9 9a       	sbi	0x17, 1	; 23
	DDRB |= (1 << DDB2);
     2d6:	ba 9a       	sbi	0x17, 2	; 23
	// set PWM for 50% duty cycle @ 8bit
	//OCR1A = 128;
	//OCR1B = 128;
	
	// set PWM for 75% duty cycle @ 8bit
	OCR1A = 64;
     2d8:	80 e4       	ldi	r24, 0x40	; 64
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	9b bd       	out	0x2b, r25	; 43
     2de:	8a bd       	out	0x2a, r24	; 42
	OCR1B = 64;
     2e0:	99 bd       	out	0x29, r25	; 41
     2e2:	88 bd       	out	0x28, r24	; 40
	// set PWM for 100% duty cycle @ 8bit
	//OCR1A = 32;
	//OCR1B = 32;


	TCCR1A |= (1 << COM1A1);
     2e4:	8f b5       	in	r24, 0x2f	; 47
     2e6:	80 68       	ori	r24, 0x80	; 128
     2e8:	8f bd       	out	0x2f, r24	; 47
	// set non-inverting mode
	TCCR1A |= (1 << COM1B1);
     2ea:	8f b5       	in	r24, 0x2f	; 47
     2ec:	80 62       	ori	r24, 0x20	; 32
     2ee:	8f bd       	out	0x2f, r24	; 47

	TCCR1A |= (1 << WGM10);
     2f0:	8f b5       	in	r24, 0x2f	; 47
     2f2:	81 60       	ori	r24, 0x01	; 1
     2f4:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM12);
     2f6:	8e b5       	in	r24, 0x2e	; 46
     2f8:	88 60       	ori	r24, 0x08	; 8
     2fa:	8e bd       	out	0x2e, r24	; 46
	
	//TCCR1B |= (1 << CS10) | (1 << CS12); //1024 prescaler
	
	//TCCR1B |= (1 << CS12); // 256 prescaler
	
	TCCR1B |= (1 << CS10) | (1 << CS11); // 64 prescaler for 500 Hz
     2fc:	8e b5       	in	r24, 0x2e	; 46
     2fe:	83 60       	ori	r24, 0x03	; 3
     300:	8e bd       	out	0x2e, r24	; 46
     302:	08 95       	ret

00000304 <PWM_get_duty_cycle>:
	
}



uint8_t PWM_get_duty_cycle(uint8_t * str  ){
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	00 d0       	rcall	.+0      	; 0x30a <PWM_get_duty_cycle+0x6>
     30a:	00 d0       	rcall	.+0      	; 0x30c <PWM_get_duty_cycle+0x8>
     30c:	1f 92       	push	r1
     30e:	cd b7       	in	r28, 0x3d	; 61
     310:	de b7       	in	r29, 0x3e	; 62
     312:	fc 01       	movw	r30, r24
     314:	32 97       	sbiw	r30, 0x02	; 2
	uint8_t *first , *second, *three, flage=0 , i=0;
	first = second = three= str;
	second++;
	three +=2;
	do{
		if(isdigit(*first)&&isdigit(*second) &&isdigit(*three)){
     316:	22 81       	ldd	r18, Z+2	; 0x02
     318:	82 2f       	mov	r24, r18
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	c0 97       	sbiw	r24, 0x30	; 48
     31e:	0a 97       	sbiw	r24, 0x0a	; 10
     320:	88 f4       	brcc	.+34     	; 0x344 <PWM_get_duty_cycle+0x40>
     322:	33 81       	ldd	r19, Z+3	; 0x03
     324:	83 2f       	mov	r24, r19
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	c0 97       	sbiw	r24, 0x30	; 48
     32a:	0a 97       	sbiw	r24, 0x0a	; 10
     32c:	98 f4       	brcc	.+38     	; 0x354 <PWM_get_duty_cycle+0x50>
     32e:	44 81       	ldd	r20, Z+4	; 0x04
     330:	84 2f       	mov	r24, r20
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	c0 97       	sbiw	r24, 0x30	; 48
     336:	0a 97       	sbiw	r24, 0x0a	; 10
     338:	88 f4       	brcc	.+34     	; 0x35c <PWM_get_duty_cycle+0x58>
			pduty[i++]=*first;
     33a:	29 83       	std	Y+1, r18	; 0x01
			pduty[i++]=*second;
     33c:	3a 83       	std	Y+2, r19	; 0x02
			pduty[i++]=*three;
     33e:	4b 83       	std	Y+3, r20	; 0x03
			pduty[i]='\0';
     340:	1c 82       	std	Y+4, r1	; 0x04
			flage=1;
     342:	04 c0       	rjmp	.+8      	; 0x34c <PWM_get_duty_cycle+0x48>
     344:	31 96       	adiw	r30, 0x01	; 1
     346:	e7 cf       	rjmp	.-50     	; 0x316 <PWM_get_duty_cycle+0x12>
			pduty[i++]=*first;
			pduty[i++]=*second;
			pduty[i]='\0';
			flage=1;
			}else if(((*(first-2)) ==':')&&isdigit(*first)){
			pduty[i++]=*first;
     348:	29 83       	std	Y+1, r18	; 0x01
			pduty[i]='\0';
     34a:	1a 82       	std	Y+2, r1	; 0x02
			second++;
			three++;
			flage=0;
		}
	}while(!flage);
	duty =atoi(pduty);
     34c:	ce 01       	movw	r24, r28
     34e:	01 96       	adiw	r24, 0x01	; 1
     350:	cf d3       	rcall	.+1950   	; 0xaf0 <atoi>
	return duty;
     352:	08 c0       	rjmp	.+16     	; 0x364 <PWM_get_duty_cycle+0x60>
			}else if(isdigit(*first)&&isdigit(*second)){
			pduty[i++]=*first;
			pduty[i++]=*second;
			pduty[i]='\0';
			flage=1;
			}else if(((*(first-2)) ==':')&&isdigit(*first)){
     354:	80 81       	ld	r24, Z
     356:	8a 33       	cpi	r24, 0x3A	; 58
     358:	a9 f7       	brne	.-22     	; 0x344 <PWM_get_duty_cycle+0x40>
     35a:	f6 cf       	rjmp	.-20     	; 0x348 <PWM_get_duty_cycle+0x44>
			pduty[i++]=*second;
			pduty[i++]=*three;
			pduty[i]='\0';
			flage=1;
			}else if(isdigit(*first)&&isdigit(*second)){
			pduty[i++]=*first;
     35c:	29 83       	std	Y+1, r18	; 0x01
			pduty[i++]=*second;
     35e:	3a 83       	std	Y+2, r19	; 0x02
			pduty[i]='\0';
     360:	1b 82       	std	Y+3, r1	; 0x03
			flage=1;
     362:	f4 cf       	rjmp	.-24     	; 0x34c <PWM_get_duty_cycle+0x48>
			flage=0;
		}
	}while(!flage);
	duty =atoi(pduty);
	return duty;
}
     364:	0f 90       	pop	r0
     366:	0f 90       	pop	r0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <JSON_place_rmsvalue_in_jsonString>:
 */ 

#include <stdio.h>
#include <stdint.h>
#include "JSON_PROTOCOL.h"
void JSON_place_rmsvalue_in_jsonString(uint8_t *p_part1 , float *p_power , float *P_current , float *p_volt){
     374:	ef 92       	push	r14
     376:	ff 92       	push	r15
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	cf 93       	push	r28
     37e:	df 93       	push	r29
     380:	c8 2f       	mov	r28, r24
     382:	d9 2f       	mov	r29, r25
     384:	8b 01       	movw	r16, r22
     386:	7a 01       	movw	r14, r20
	
	sprintf(p_part1 , "{\n\t\"3\":\n\t{\n\t\t\"mfc\":\n\t\t\t{\n\t\t\t\t\"req\":\"128\",\n\t\t\t\t\"cur\":\"123\"\n\t\t\t},\n\t\t\t\"ver\"\"1.2.3\",\n\t\t\t\"param\":\n\t\t\t{\n\t\t\t\t\"pwr\":\"%dW\"\n\t\t\t\t\"freq\":\"100HZ\"\n\t\t\t\t\"curr\":\"%dmA\"\n\t\t\t\t\"volt\":\"%dV\"\n\t\t\t},\n\t\t\t\"clr\":\"ew\",\n\t\t\t\"ew\":[\"cmprStalled\",\"pistonCollision\"]\n\t\t\t\"user\":",(int)*p_power  ,(int)*P_current , (int)*p_volt);
     388:	f9 01       	movw	r30, r18
     38a:	60 81       	ld	r22, Z
     38c:	71 81       	ldd	r23, Z+1	; 0x01
     38e:	82 81       	ldd	r24, Z+2	; 0x02
     390:	93 81       	ldd	r25, Z+3	; 0x03
     392:	ea d1       	rcall	.+980    	; 0x768 <__fixsfsi>
     394:	7f 93       	push	r23
     396:	6f 93       	push	r22
     398:	f7 01       	movw	r30, r14
     39a:	60 81       	ld	r22, Z
     39c:	71 81       	ldd	r23, Z+1	; 0x01
     39e:	82 81       	ldd	r24, Z+2	; 0x02
     3a0:	93 81       	ldd	r25, Z+3	; 0x03
     3a2:	e2 d1       	rcall	.+964    	; 0x768 <__fixsfsi>
     3a4:	7f 93       	push	r23
     3a6:	6f 93       	push	r22
     3a8:	f8 01       	movw	r30, r16
     3aa:	60 81       	ld	r22, Z
     3ac:	71 81       	ldd	r23, Z+1	; 0x01
     3ae:	82 81       	ldd	r24, Z+2	; 0x02
     3b0:	93 81       	ldd	r25, Z+3	; 0x03
     3b2:	da d1       	rcall	.+948    	; 0x768 <__fixsfsi>
     3b4:	7f 93       	push	r23
     3b6:	6f 93       	push	r22
     3b8:	82 e6       	ldi	r24, 0x62	; 98
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	9f 93       	push	r25
     3be:	8f 93       	push	r24
     3c0:	df 93       	push	r29
     3c2:	cf 93       	push	r28
     3c4:	ba d3       	rcall	.+1908   	; 0xb3a <sprintf>
	
     3c6:	8d b7       	in	r24, 0x3d	; 61
     3c8:	9e b7       	in	r25, 0x3e	; 62
     3ca:	0a 96       	adiw	r24, 0x0a	; 10
     3cc:	0f b6       	in	r0, 0x3f	; 63
     3ce:	f8 94       	cli
     3d0:	9e bf       	out	0x3e, r25	; 62
     3d2:	0f be       	out	0x3f, r0	; 63
     3d4:	8d bf       	out	0x3d, r24	; 61
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	08 95       	ret

000003e4 <__vector_3>:
uint8_t PWM_duty_cycle=0;
uint8_t JSON_str_jsonpart1[260];
uint8_t *JSON_str_jsonpart2="\n\t\t\t{\n\t\t\t\t\"pistonCollision\": \"no\"\n\t\t\t}\n\t}\n}\n";

/*interrupt every 1 microsecond*/
ISR(TIMER2_COMP_vect){
     3e4:	1f 92       	push	r1
     3e6:	0f 92       	push	r0
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	0f 92       	push	r0
     3ec:	11 24       	eor	r1, r1
     3ee:	2f 93       	push	r18
     3f0:	3f 93       	push	r19
     3f2:	4f 93       	push	r20
     3f4:	5f 93       	push	r21
     3f6:	6f 93       	push	r22
     3f8:	7f 93       	push	r23
     3fa:	8f 93       	push	r24
     3fc:	9f 93       	push	r25
     3fe:	af 93       	push	r26
     400:	bf 93       	push	r27
     402:	ef 93       	push	r30
     404:	ff 93       	push	r31
	if(currentrms < THRSSHOTCURRENT ){
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	46 e9       	ldi	r20, 0x96	; 150
     40c:	53 e4       	ldi	r21, 0x43	; 67
     40e:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <currentrms>
     412:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <currentrms+0x1>
     416:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <currentrms+0x2>
     41a:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <currentrms+0x3>
     41e:	38 d1       	rcall	.+624    	; 0x690 <__cmpsf2>
     420:	88 23       	and	r24, r24
     422:	1c f4       	brge	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
			PWMA_ON();
     424:	29 df       	rcall	.-430    	; 0x278 <PWMA_ON>
			PWMB_ON();
     426:	30 df       	rcall	.-416    	; 0x288 <PWMB_ON>
     428:	05 c0       	rjmp	.+10     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
	}else{
			PWMA_OFF();
     42a:	36 df       	rcall	.-404    	; 0x298 <PWMA_OFF>
			PWMB_OFF();
     42c:	3b df       	rcall	.-394    	; 0x2a4 <PWMB_OFF>
			UART_sendString("PWMA,PWMA PINS IS CLOSED..THE CURRENT IS VERY HIGH\n");
     42e:	84 e5       	ldi	r24, 0x54	; 84
     430:	91 e0       	ldi	r25, 0x01	; 1
     432:	89 d0       	rcall	.+274    	; 0x546 <UART_sendString>
	}
}
     434:	ff 91       	pop	r31
     436:	ef 91       	pop	r30
     438:	bf 91       	pop	r27
     43a:	af 91       	pop	r26
     43c:	9f 91       	pop	r25
     43e:	8f 91       	pop	r24
     440:	7f 91       	pop	r23
     442:	6f 91       	pop	r22
     444:	5f 91       	pop	r21
     446:	4f 91       	pop	r20
     448:	3f 91       	pop	r19
     44a:	2f 91       	pop	r18
     44c:	0f 90       	pop	r0
     44e:	0f be       	out	0x3f, r0	; 63
     450:	0f 90       	pop	r0
     452:	1f 90       	pop	r1
     454:	18 95       	reti

00000456 <main>:

int main(void)
{   
	/*initialize modules*/
	Double_PWM_initialise();
     456:	3e df       	rcall	.-388    	; 0x2d4 <Double_PWM_initialise>
	adc_init();
     458:	02 de       	rcall	.-1020   	; 0x5e <adc_init>
	uart_initialise();
     45a:	64 d0       	rcall	.+200    	; 0x524 <uart_initialise>
	/*here the circuit protection */
	CIR_timer2_interrupt_init();
     45c:	04 df       	rcall	.-504    	; 0x266 <CIR_timer2_interrupt_init>
     45e:	2f e7       	ldi	r18, 0x7F	; 127
     460:	88 e3       	ldi	r24, 0x38	; 56
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	21 50       	subi	r18, 0x01	; 1
     466:	80 40       	sbci	r24, 0x00	; 0
     468:	90 40       	sbci	r25, 0x00	; 0
     46a:	e1 f7       	brne	.-8      	; 0x464 <__stack+0x5>
     46c:	00 c0       	rjmp	.+0      	; 0x46e <__stack+0xf>
     46e:	00 00       	nop
	_delay_ms(50);
	
	
		
	/*atmega send to putty that's micro is ready*//* send in form :{"3":{"mfc":{"req":"130"}}}#*/
	UART_sendString("UART IS READY .. SEND THE MESSAGE :\n");
     470:	88 e8       	ldi	r24, 0x88	; 136
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	68 d0       	rcall	.+208    	; 0x546 <UART_sendString>
     476:	2f e7       	ldi	r18, 0x7F	; 127
     478:	88 e3       	ldi	r24, 0x38	; 56
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	21 50       	subi	r18, 0x01	; 1
     47e:	80 40       	sbci	r24, 0x00	; 0
     480:	90 40       	sbci	r25, 0x00	; 0
     482:	e1 f7       	brne	.-8      	; 0x47c <__stack+0x1d>
     484:	00 c0       	rjmp	.+0      	; 0x486 <__stack+0x27>
     486:	00 00       	nop
	_delay_ms(50);
	/*receive message from putty and put it on buffer array */
	UART_receiveString(UART_str_buffer);
     488:	87 e5       	ldi	r24, 0x57	; 87
     48a:	93 e0       	ldi	r25, 0x03	; 3
     48c:	71 d0       	rcall	.+226    	; 0x570 <UART_receiveString>
     48e:	2f e7       	ldi	r18, 0x7F	; 127
     490:	88 e3       	ldi	r24, 0x38	; 56
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	21 50       	subi	r18, 0x01	; 1
     496:	80 40       	sbci	r24, 0x00	; 0
     498:	90 40       	sbci	r25, 0x00	; 0
     49a:	e1 f7       	brne	.-8      	; 0x494 <__stack+0x35>
     49c:	00 c0       	rjmp	.+0      	; 0x49e <__stack+0x3f>
     49e:	00 00       	nop
	_delay_ms(50);
	

	/*duty cycle from message*/
	PWM_duty_cycle = PWM_get_duty_cycle(UART_str_buffer);
     4a0:	87 e5       	ldi	r24, 0x57	; 87
     4a2:	93 e0       	ldi	r25, 0x03	; 3
     4a4:	2f df       	rcall	.-418    	; 0x304 <PWM_get_duty_cycle>
     4a6:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <__data_end>
	
	
	/*put duty cycle for PWM*/
	PWM_dutyCycle_PWMA(PWM_duty_cycle);
     4aa:	10 df       	rcall	.-480    	; 0x2cc <PWM_dutyCycle_PWMA>
	PWM_dutyCycle_PWMB(PWM_duty_cycle);
     4ac:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <__data_end>
     4b0:	ff de       	rcall	.-514    	; 0x2b0 <PWM_dutyCycle_PWMB>
	UART_sendString("PWMA,PWMA  WORK WITH DUTYCYCLE.\n");
     4b2:	8d ea       	ldi	r24, 0xAD	; 173
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	47 d0       	rcall	.+142    	; 0x546 <UART_sendString>
     4b8:	2f e7       	ldi	r18, 0x7F	; 127
     4ba:	88 e3       	ldi	r24, 0x38	; 56
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	21 50       	subi	r18, 0x01	; 1
     4c0:	80 40       	sbci	r24, 0x00	; 0
     4c2:	90 40       	sbci	r25, 0x00	; 0
     4c4:	e1 f7       	brne	.-8      	; 0x4be <__stack+0x5f>
     4c6:	00 c0       	rjmp	.+0      	; 0x4c8 <__stack+0x69>
     4c8:	00 00       	nop
	_delay_ms(50);
	
	/*read the volt and current and power by ADC*/
	ADC_Read_calculate_Vrms_Irms_Prms(volt , current , power , &voltrms , &currentrms , &powerrms);
     4ca:	0f 2e       	mov	r0, r31
     4cc:	fb e0       	ldi	r31, 0x0B	; 11
     4ce:	ef 2e       	mov	r14, r31
     4d0:	f2 e0       	ldi	r31, 0x02	; 2
     4d2:	ff 2e       	mov	r15, r31
     4d4:	f0 2d       	mov	r31, r0
     4d6:	0f e0       	ldi	r16, 0x0F	; 15
     4d8:	12 e0       	ldi	r17, 0x02	; 2
     4da:	23 e1       	ldi	r18, 0x13	; 19
     4dc:	32 e0       	ldi	r19, 0x02	; 2
     4de:	47 e1       	ldi	r20, 0x17	; 23
     4e0:	52 e0       	ldi	r21, 0x02	; 2
     4e2:	6b e2       	ldi	r22, 0x2B	; 43
     4e4:	72 e0       	ldi	r23, 0x02	; 2
     4e6:	83 e4       	ldi	r24, 0x43	; 67
     4e8:	93 e0       	ldi	r25, 0x03	; 3
     4ea:	d6 dd       	rcall	.-1108   	; 0x98 <ADC_Read_calculate_Vrms_Irms_Prms>
	/*place (volt,current ,power)RMS reading in json string*/
	JSON_place_rmsvalue_in_jsonString(JSON_str_jsonpart1 ,&powerrms , &currentrms  ,&voltrms );
     4ec:	23 e1       	ldi	r18, 0x13	; 19
     4ee:	32 e0       	ldi	r19, 0x02	; 2
     4f0:	a8 01       	movw	r20, r16
     4f2:	b7 01       	movw	r22, r14
     4f4:	8f e3       	ldi	r24, 0x3F	; 63
     4f6:	92 e0       	ldi	r25, 0x02	; 2
     4f8:	3d df       	rcall	.-390    	; 0x374 <JSON_place_rmsvalue_in_jsonString>
	
	/*send json string   to putty  */
	UART_sendString("JSON STRING:\n");
     4fa:	8e ec       	ldi	r24, 0xCE	; 206
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	23 d0       	rcall	.+70     	; 0x546 <UART_sendString>
	UART_sendString(JSON_str_jsonpart1);//frist part
     500:	8f e3       	ldi	r24, 0x3F	; 63
     502:	92 e0       	ldi	r25, 0x02	; 2
     504:	20 d0       	rcall	.+64     	; 0x546 <UART_sendString>
	UART_sendString(JSON_str_jsonpart2);//second part
     506:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     50a:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     50e:	1b d0       	rcall	.+54     	; 0x546 <UART_sendString>
     510:	2f ef       	ldi	r18, 0xFF	; 255
     512:	84 e3       	ldi	r24, 0x34	; 52
     514:	9c e0       	ldi	r25, 0x0C	; 12
     516:	21 50       	subi	r18, 0x01	; 1
     518:	80 40       	sbci	r24, 0x00	; 0
     51a:	90 40       	sbci	r25, 0x00	; 0
     51c:	e1 f7       	brne	.-8      	; 0x516 <__stack+0xb7>
     51e:	00 c0       	rjmp	.+0      	; 0x520 <__stack+0xc1>
     520:	00 00       	nop
     522:	ff cf       	rjmp	.-2      	; 0x522 <__stack+0xc3>

00000524 <uart_initialise>:
		uart_transmit_byte(byte_array[i]);
		//uart_transmit_byte(32);
	}
	//uart_transmit_byte(10);
	
}
     524:	1b b8       	out	0x0b, r1	; 11
     526:	88 e1       	ldi	r24, 0x18	; 24
     528:	8a b9       	out	0x0a, r24	; 10
     52a:	86 e8       	ldi	r24, 0x86	; 134
     52c:	80 bd       	out	0x20, r24	; 32
     52e:	10 bc       	out	0x20, r1	; 32
     530:	83 e3       	ldi	r24, 0x33	; 51
     532:	89 b9       	out	0x09, r24	; 9
     534:	08 95       	ret

00000536 <uart_transmit_byte>:
     536:	5d 9b       	sbis	0x0b, 5	; 11
     538:	fe cf       	rjmp	.-4      	; 0x536 <uart_transmit_byte>
     53a:	8c b9       	out	0x0c, r24	; 12
     53c:	08 95       	ret

0000053e <UART_recieve_Byte>:
     53e:	5f 9b       	sbis	0x0b, 7	; 11
     540:	fe cf       	rjmp	.-4      	; 0x53e <UART_recieve_Byte>
     542:	8c b1       	in	r24, 0x0c	; 12
     544:	08 95       	ret

00000546 <UART_sendString>:
void UART_sendString(const uint8_t *Str)
{
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	fc 01       	movw	r30, r24
	uint8_t i = 0;
	while(Str[i] != '\0')
     54e:	80 81       	ld	r24, Z
     550:	88 23       	and	r24, r24
     552:	51 f0       	breq	.+20     	; 0x568 <UART_sendString+0x22>
     554:	8f 01       	movw	r16, r30
     556:	c0 e0       	ldi	r28, 0x00	; 0
	{
		uart_transmit_byte(Str[i]);
     558:	ee df       	rcall	.-36     	; 0x536 <uart_transmit_byte>
		i++;
     55a:	cf 5f       	subi	r28, 0xFF	; 255
	
}
void UART_sendString(const uint8_t *Str)
{
	uint8_t i = 0;
	while(Str[i] != '\0')
     55c:	f8 01       	movw	r30, r16
     55e:	ec 0f       	add	r30, r28
     560:	f1 1d       	adc	r31, r1
     562:	80 81       	ld	r24, Z
     564:	81 11       	cpse	r24, r1
     566:	f8 cf       	rjmp	.-16     	; 0x558 <UART_sendString+0x12>
	{
		uart_transmit_byte(Str[i]);
		i++;
	}
	
}
     568:	cf 91       	pop	r28
     56a:	1f 91       	pop	r17
     56c:	0f 91       	pop	r16
     56e:	08 95       	ret

00000570 <UART_receiveString>:

void UART_receiveString(uint8_t *Str)
{
     570:	ef 92       	push	r14
     572:	ff 92       	push	r15
     574:	1f 93       	push	r17
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	7c 01       	movw	r14, r24
	uint8_t i = 0;
	Str[i] = UART_recieve_Byte();
     57c:	e0 df       	rcall	.-64     	; 0x53e <UART_recieve_Byte>
     57e:	f7 01       	movw	r30, r14
     580:	80 83       	st	Z, r24
	while((Str[i-1] != '\n') && (Str[i] != '\r'))
     582:	31 97       	sbiw	r30, 0x01	; 1
     584:	90 81       	ld	r25, Z
     586:	9a 30       	cpi	r25, 0x0A	; 10
     588:	81 f0       	breq	.+32     	; 0x5aa <UART_receiveString+0x3a>
     58a:	8d 30       	cpi	r24, 0x0D	; 13
     58c:	81 f0       	breq	.+32     	; 0x5ae <UART_receiveString+0x3e>
     58e:	10 e0       	ldi	r17, 0x00	; 0
	{
		i++;
     590:	1f 5f       	subi	r17, 0xFF	; 255
		Str[i] = UART_recieve_Byte();
     592:	e7 01       	movw	r28, r14
     594:	c1 0f       	add	r28, r17
     596:	d1 1d       	adc	r29, r1
     598:	d2 df       	rcall	.-92     	; 0x53e <UART_recieve_Byte>
     59a:	88 83       	st	Y, r24

void UART_receiveString(uint8_t *Str)
{
	uint8_t i = 0;
	Str[i] = UART_recieve_Byte();
	while((Str[i-1] != '\n') && (Str[i] != '\r'))
     59c:	21 97       	sbiw	r28, 0x01	; 1
     59e:	98 81       	ld	r25, Y
     5a0:	9a 30       	cpi	r25, 0x0A	; 10
     5a2:	31 f0       	breq	.+12     	; 0x5b0 <UART_receiveString+0x40>
     5a4:	8d 30       	cpi	r24, 0x0D	; 13
     5a6:	a1 f7       	brne	.-24     	; 0x590 <UART_receiveString+0x20>
     5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <UART_receiveString+0x40>
	
}

void UART_receiveString(uint8_t *Str)
{
	uint8_t i = 0;
     5aa:	10 e0       	ldi	r17, 0x00	; 0
     5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <UART_receiveString+0x40>
     5ae:	10 e0       	ldi	r17, 0x00	; 0
	while((Str[i-1] != '\n') && (Str[i] != '\r'))
	{
		i++;
		Str[i] = UART_recieve_Byte();
	}
	Str[--i] = '\0';
     5b0:	11 50       	subi	r17, 0x01	; 1
     5b2:	f7 01       	movw	r30, r14
     5b4:	e1 0f       	add	r30, r17
     5b6:	f1 1d       	adc	r31, r1
     5b8:	10 82       	st	Z, r1


}
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	ff 90       	pop	r15
     5c2:	ef 90       	pop	r14
     5c4:	08 95       	ret

000005c6 <__subsf3>:
     5c6:	50 58       	subi	r21, 0x80	; 128

000005c8 <__addsf3>:
     5c8:	bb 27       	eor	r27, r27
     5ca:	aa 27       	eor	r26, r26
     5cc:	0e d0       	rcall	.+28     	; 0x5ea <__addsf3x>
     5ce:	83 c1       	rjmp	.+774    	; 0x8d6 <__fp_round>
     5d0:	74 d1       	rcall	.+744    	; 0x8ba <__fp_pscA>
     5d2:	30 f0       	brcs	.+12     	; 0x5e0 <__addsf3+0x18>
     5d4:	79 d1       	rcall	.+754    	; 0x8c8 <__fp_pscB>
     5d6:	20 f0       	brcs	.+8      	; 0x5e0 <__addsf3+0x18>
     5d8:	31 f4       	brne	.+12     	; 0x5e6 <__addsf3+0x1e>
     5da:	9f 3f       	cpi	r25, 0xFF	; 255
     5dc:	11 f4       	brne	.+4      	; 0x5e2 <__addsf3+0x1a>
     5de:	1e f4       	brtc	.+6      	; 0x5e6 <__addsf3+0x1e>
     5e0:	69 c1       	rjmp	.+722    	; 0x8b4 <__fp_nan>
     5e2:	0e f4       	brtc	.+2      	; 0x5e6 <__addsf3+0x1e>
     5e4:	e0 95       	com	r30
     5e6:	e7 fb       	bst	r30, 7
     5e8:	51 c1       	rjmp	.+674    	; 0x88c <__fp_inf>

000005ea <__addsf3x>:
     5ea:	e9 2f       	mov	r30, r25
     5ec:	85 d1       	rcall	.+778    	; 0x8f8 <__fp_split3>
     5ee:	80 f3       	brcs	.-32     	; 0x5d0 <__addsf3+0x8>
     5f0:	ba 17       	cp	r27, r26
     5f2:	62 07       	cpc	r22, r18
     5f4:	73 07       	cpc	r23, r19
     5f6:	84 07       	cpc	r24, r20
     5f8:	95 07       	cpc	r25, r21
     5fa:	18 f0       	brcs	.+6      	; 0x602 <__addsf3x+0x18>
     5fc:	71 f4       	brne	.+28     	; 0x61a <__addsf3x+0x30>
     5fe:	9e f5       	brtc	.+102    	; 0x666 <__addsf3x+0x7c>
     600:	9d c1       	rjmp	.+826    	; 0x93c <__fp_zero>
     602:	0e f4       	brtc	.+2      	; 0x606 <__addsf3x+0x1c>
     604:	e0 95       	com	r30
     606:	0b 2e       	mov	r0, r27
     608:	ba 2f       	mov	r27, r26
     60a:	a0 2d       	mov	r26, r0
     60c:	0b 01       	movw	r0, r22
     60e:	b9 01       	movw	r22, r18
     610:	90 01       	movw	r18, r0
     612:	0c 01       	movw	r0, r24
     614:	ca 01       	movw	r24, r20
     616:	a0 01       	movw	r20, r0
     618:	11 24       	eor	r1, r1
     61a:	ff 27       	eor	r31, r31
     61c:	59 1b       	sub	r21, r25
     61e:	99 f0       	breq	.+38     	; 0x646 <__addsf3x+0x5c>
     620:	59 3f       	cpi	r21, 0xF9	; 249
     622:	50 f4       	brcc	.+20     	; 0x638 <__addsf3x+0x4e>
     624:	50 3e       	cpi	r21, 0xE0	; 224
     626:	68 f1       	brcs	.+90     	; 0x682 <__addsf3x+0x98>
     628:	1a 16       	cp	r1, r26
     62a:	f0 40       	sbci	r31, 0x00	; 0
     62c:	a2 2f       	mov	r26, r18
     62e:	23 2f       	mov	r18, r19
     630:	34 2f       	mov	r19, r20
     632:	44 27       	eor	r20, r20
     634:	58 5f       	subi	r21, 0xF8	; 248
     636:	f3 cf       	rjmp	.-26     	; 0x61e <__addsf3x+0x34>
     638:	46 95       	lsr	r20
     63a:	37 95       	ror	r19
     63c:	27 95       	ror	r18
     63e:	a7 95       	ror	r26
     640:	f0 40       	sbci	r31, 0x00	; 0
     642:	53 95       	inc	r21
     644:	c9 f7       	brne	.-14     	; 0x638 <__addsf3x+0x4e>
     646:	7e f4       	brtc	.+30     	; 0x666 <__addsf3x+0x7c>
     648:	1f 16       	cp	r1, r31
     64a:	ba 0b       	sbc	r27, r26
     64c:	62 0b       	sbc	r22, r18
     64e:	73 0b       	sbc	r23, r19
     650:	84 0b       	sbc	r24, r20
     652:	ba f0       	brmi	.+46     	; 0x682 <__addsf3x+0x98>
     654:	91 50       	subi	r25, 0x01	; 1
     656:	a1 f0       	breq	.+40     	; 0x680 <__addsf3x+0x96>
     658:	ff 0f       	add	r31, r31
     65a:	bb 1f       	adc	r27, r27
     65c:	66 1f       	adc	r22, r22
     65e:	77 1f       	adc	r23, r23
     660:	88 1f       	adc	r24, r24
     662:	c2 f7       	brpl	.-16     	; 0x654 <__addsf3x+0x6a>
     664:	0e c0       	rjmp	.+28     	; 0x682 <__addsf3x+0x98>
     666:	ba 0f       	add	r27, r26
     668:	62 1f       	adc	r22, r18
     66a:	73 1f       	adc	r23, r19
     66c:	84 1f       	adc	r24, r20
     66e:	48 f4       	brcc	.+18     	; 0x682 <__addsf3x+0x98>
     670:	87 95       	ror	r24
     672:	77 95       	ror	r23
     674:	67 95       	ror	r22
     676:	b7 95       	ror	r27
     678:	f7 95       	ror	r31
     67a:	9e 3f       	cpi	r25, 0xFE	; 254
     67c:	08 f0       	brcs	.+2      	; 0x680 <__addsf3x+0x96>
     67e:	b3 cf       	rjmp	.-154    	; 0x5e6 <__addsf3+0x1e>
     680:	93 95       	inc	r25
     682:	88 0f       	add	r24, r24
     684:	08 f0       	brcs	.+2      	; 0x688 <__addsf3x+0x9e>
     686:	99 27       	eor	r25, r25
     688:	ee 0f       	add	r30, r30
     68a:	97 95       	ror	r25
     68c:	87 95       	ror	r24
     68e:	08 95       	ret

00000690 <__cmpsf2>:
     690:	d9 d0       	rcall	.+434    	; 0x844 <__fp_cmp>
     692:	08 f4       	brcc	.+2      	; 0x696 <__cmpsf2+0x6>
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	08 95       	ret

00000698 <__divsf3>:
     698:	0c d0       	rcall	.+24     	; 0x6b2 <__divsf3x>
     69a:	1d c1       	rjmp	.+570    	; 0x8d6 <__fp_round>
     69c:	15 d1       	rcall	.+554    	; 0x8c8 <__fp_pscB>
     69e:	40 f0       	brcs	.+16     	; 0x6b0 <__divsf3+0x18>
     6a0:	0c d1       	rcall	.+536    	; 0x8ba <__fp_pscA>
     6a2:	30 f0       	brcs	.+12     	; 0x6b0 <__divsf3+0x18>
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x16>
     6a6:	5f 3f       	cpi	r21, 0xFF	; 255
     6a8:	19 f0       	breq	.+6      	; 0x6b0 <__divsf3+0x18>
     6aa:	f0 c0       	rjmp	.+480    	; 0x88c <__fp_inf>
     6ac:	51 11       	cpse	r21, r1
     6ae:	47 c1       	rjmp	.+654    	; 0x93e <__fp_szero>
     6b0:	01 c1       	rjmp	.+514    	; 0x8b4 <__fp_nan>

000006b2 <__divsf3x>:
     6b2:	22 d1       	rcall	.+580    	; 0x8f8 <__fp_split3>
     6b4:	98 f3       	brcs	.-26     	; 0x69c <__divsf3+0x4>

000006b6 <__divsf3_pse>:
     6b6:	99 23       	and	r25, r25
     6b8:	c9 f3       	breq	.-14     	; 0x6ac <__divsf3+0x14>
     6ba:	55 23       	and	r21, r21
     6bc:	b1 f3       	breq	.-20     	; 0x6aa <__divsf3+0x12>
     6be:	95 1b       	sub	r25, r21
     6c0:	55 0b       	sbc	r21, r21
     6c2:	bb 27       	eor	r27, r27
     6c4:	aa 27       	eor	r26, r26
     6c6:	62 17       	cp	r22, r18
     6c8:	73 07       	cpc	r23, r19
     6ca:	84 07       	cpc	r24, r20
     6cc:	38 f0       	brcs	.+14     	; 0x6dc <__divsf3_pse+0x26>
     6ce:	9f 5f       	subi	r25, 0xFF	; 255
     6d0:	5f 4f       	sbci	r21, 0xFF	; 255
     6d2:	22 0f       	add	r18, r18
     6d4:	33 1f       	adc	r19, r19
     6d6:	44 1f       	adc	r20, r20
     6d8:	aa 1f       	adc	r26, r26
     6da:	a9 f3       	breq	.-22     	; 0x6c6 <__divsf3_pse+0x10>
     6dc:	33 d0       	rcall	.+102    	; 0x744 <__divsf3_pse+0x8e>
     6de:	0e 2e       	mov	r0, r30
     6e0:	3a f0       	brmi	.+14     	; 0x6f0 <__divsf3_pse+0x3a>
     6e2:	e0 e8       	ldi	r30, 0x80	; 128
     6e4:	30 d0       	rcall	.+96     	; 0x746 <__divsf3_pse+0x90>
     6e6:	91 50       	subi	r25, 0x01	; 1
     6e8:	50 40       	sbci	r21, 0x00	; 0
     6ea:	e6 95       	lsr	r30
     6ec:	00 1c       	adc	r0, r0
     6ee:	ca f7       	brpl	.-14     	; 0x6e2 <__divsf3_pse+0x2c>
     6f0:	29 d0       	rcall	.+82     	; 0x744 <__divsf3_pse+0x8e>
     6f2:	fe 2f       	mov	r31, r30
     6f4:	27 d0       	rcall	.+78     	; 0x744 <__divsf3_pse+0x8e>
     6f6:	66 0f       	add	r22, r22
     6f8:	77 1f       	adc	r23, r23
     6fa:	88 1f       	adc	r24, r24
     6fc:	bb 1f       	adc	r27, r27
     6fe:	26 17       	cp	r18, r22
     700:	37 07       	cpc	r19, r23
     702:	48 07       	cpc	r20, r24
     704:	ab 07       	cpc	r26, r27
     706:	b0 e8       	ldi	r27, 0x80	; 128
     708:	09 f0       	breq	.+2      	; 0x70c <__divsf3_pse+0x56>
     70a:	bb 0b       	sbc	r27, r27
     70c:	80 2d       	mov	r24, r0
     70e:	bf 01       	movw	r22, r30
     710:	ff 27       	eor	r31, r31
     712:	93 58       	subi	r25, 0x83	; 131
     714:	5f 4f       	sbci	r21, 0xFF	; 255
     716:	2a f0       	brmi	.+10     	; 0x722 <__divsf3_pse+0x6c>
     718:	9e 3f       	cpi	r25, 0xFE	; 254
     71a:	51 05       	cpc	r21, r1
     71c:	68 f0       	brcs	.+26     	; 0x738 <__divsf3_pse+0x82>
     71e:	b6 c0       	rjmp	.+364    	; 0x88c <__fp_inf>
     720:	0e c1       	rjmp	.+540    	; 0x93e <__fp_szero>
     722:	5f 3f       	cpi	r21, 0xFF	; 255
     724:	ec f3       	brlt	.-6      	; 0x720 <__divsf3_pse+0x6a>
     726:	98 3e       	cpi	r25, 0xE8	; 232
     728:	dc f3       	brlt	.-10     	; 0x720 <__divsf3_pse+0x6a>
     72a:	86 95       	lsr	r24
     72c:	77 95       	ror	r23
     72e:	67 95       	ror	r22
     730:	b7 95       	ror	r27
     732:	f7 95       	ror	r31
     734:	9f 5f       	subi	r25, 0xFF	; 255
     736:	c9 f7       	brne	.-14     	; 0x72a <__divsf3_pse+0x74>
     738:	88 0f       	add	r24, r24
     73a:	91 1d       	adc	r25, r1
     73c:	96 95       	lsr	r25
     73e:	87 95       	ror	r24
     740:	97 f9       	bld	r25, 7
     742:	08 95       	ret
     744:	e1 e0       	ldi	r30, 0x01	; 1
     746:	66 0f       	add	r22, r22
     748:	77 1f       	adc	r23, r23
     74a:	88 1f       	adc	r24, r24
     74c:	bb 1f       	adc	r27, r27
     74e:	62 17       	cp	r22, r18
     750:	73 07       	cpc	r23, r19
     752:	84 07       	cpc	r24, r20
     754:	ba 07       	cpc	r27, r26
     756:	20 f0       	brcs	.+8      	; 0x760 <__divsf3_pse+0xaa>
     758:	62 1b       	sub	r22, r18
     75a:	73 0b       	sbc	r23, r19
     75c:	84 0b       	sbc	r24, r20
     75e:	ba 0b       	sbc	r27, r26
     760:	ee 1f       	adc	r30, r30
     762:	88 f7       	brcc	.-30     	; 0x746 <__divsf3_pse+0x90>
     764:	e0 95       	com	r30
     766:	08 95       	ret

00000768 <__fixsfsi>:
     768:	04 d0       	rcall	.+8      	; 0x772 <__fixunssfsi>
     76a:	68 94       	set
     76c:	b1 11       	cpse	r27, r1
     76e:	e7 c0       	rjmp	.+462    	; 0x93e <__fp_szero>
     770:	08 95       	ret

00000772 <__fixunssfsi>:
     772:	ca d0       	rcall	.+404    	; 0x908 <__fp_splitA>
     774:	88 f0       	brcs	.+34     	; 0x798 <__fixunssfsi+0x26>
     776:	9f 57       	subi	r25, 0x7F	; 127
     778:	90 f0       	brcs	.+36     	; 0x79e <__fixunssfsi+0x2c>
     77a:	b9 2f       	mov	r27, r25
     77c:	99 27       	eor	r25, r25
     77e:	b7 51       	subi	r27, 0x17	; 23
     780:	a0 f0       	brcs	.+40     	; 0x7aa <__fixunssfsi+0x38>
     782:	d1 f0       	breq	.+52     	; 0x7b8 <__fixunssfsi+0x46>
     784:	66 0f       	add	r22, r22
     786:	77 1f       	adc	r23, r23
     788:	88 1f       	adc	r24, r24
     78a:	99 1f       	adc	r25, r25
     78c:	1a f0       	brmi	.+6      	; 0x794 <__fixunssfsi+0x22>
     78e:	ba 95       	dec	r27
     790:	c9 f7       	brne	.-14     	; 0x784 <__fixunssfsi+0x12>
     792:	12 c0       	rjmp	.+36     	; 0x7b8 <__fixunssfsi+0x46>
     794:	b1 30       	cpi	r27, 0x01	; 1
     796:	81 f0       	breq	.+32     	; 0x7b8 <__fixunssfsi+0x46>
     798:	d1 d0       	rcall	.+418    	; 0x93c <__fp_zero>
     79a:	b1 e0       	ldi	r27, 0x01	; 1
     79c:	08 95       	ret
     79e:	ce c0       	rjmp	.+412    	; 0x93c <__fp_zero>
     7a0:	67 2f       	mov	r22, r23
     7a2:	78 2f       	mov	r23, r24
     7a4:	88 27       	eor	r24, r24
     7a6:	b8 5f       	subi	r27, 0xF8	; 248
     7a8:	39 f0       	breq	.+14     	; 0x7b8 <__fixunssfsi+0x46>
     7aa:	b9 3f       	cpi	r27, 0xF9	; 249
     7ac:	cc f3       	brlt	.-14     	; 0x7a0 <__fixunssfsi+0x2e>
     7ae:	86 95       	lsr	r24
     7b0:	77 95       	ror	r23
     7b2:	67 95       	ror	r22
     7b4:	b3 95       	inc	r27
     7b6:	d9 f7       	brne	.-10     	; 0x7ae <__fixunssfsi+0x3c>
     7b8:	3e f4       	brtc	.+14     	; 0x7c8 <__fixunssfsi+0x56>
     7ba:	90 95       	com	r25
     7bc:	80 95       	com	r24
     7be:	70 95       	com	r23
     7c0:	61 95       	neg	r22
     7c2:	7f 4f       	sbci	r23, 0xFF	; 255
     7c4:	8f 4f       	sbci	r24, 0xFF	; 255
     7c6:	9f 4f       	sbci	r25, 0xFF	; 255
     7c8:	08 95       	ret

000007ca <__floatunsisf>:
     7ca:	e8 94       	clt
     7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <__floatsisf+0x12>

000007ce <__floatsisf>:
     7ce:	97 fb       	bst	r25, 7
     7d0:	3e f4       	brtc	.+14     	; 0x7e0 <__floatsisf+0x12>
     7d2:	90 95       	com	r25
     7d4:	80 95       	com	r24
     7d6:	70 95       	com	r23
     7d8:	61 95       	neg	r22
     7da:	7f 4f       	sbci	r23, 0xFF	; 255
     7dc:	8f 4f       	sbci	r24, 0xFF	; 255
     7de:	9f 4f       	sbci	r25, 0xFF	; 255
     7e0:	99 23       	and	r25, r25
     7e2:	a9 f0       	breq	.+42     	; 0x80e <__floatsisf+0x40>
     7e4:	f9 2f       	mov	r31, r25
     7e6:	96 e9       	ldi	r25, 0x96	; 150
     7e8:	bb 27       	eor	r27, r27
     7ea:	93 95       	inc	r25
     7ec:	f6 95       	lsr	r31
     7ee:	87 95       	ror	r24
     7f0:	77 95       	ror	r23
     7f2:	67 95       	ror	r22
     7f4:	b7 95       	ror	r27
     7f6:	f1 11       	cpse	r31, r1
     7f8:	f8 cf       	rjmp	.-16     	; 0x7ea <__floatsisf+0x1c>
     7fa:	fa f4       	brpl	.+62     	; 0x83a <__floatsisf+0x6c>
     7fc:	bb 0f       	add	r27, r27
     7fe:	11 f4       	brne	.+4      	; 0x804 <__floatsisf+0x36>
     800:	60 ff       	sbrs	r22, 0
     802:	1b c0       	rjmp	.+54     	; 0x83a <__floatsisf+0x6c>
     804:	6f 5f       	subi	r22, 0xFF	; 255
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	8f 4f       	sbci	r24, 0xFF	; 255
     80a:	9f 4f       	sbci	r25, 0xFF	; 255
     80c:	16 c0       	rjmp	.+44     	; 0x83a <__floatsisf+0x6c>
     80e:	88 23       	and	r24, r24
     810:	11 f0       	breq	.+4      	; 0x816 <__floatsisf+0x48>
     812:	96 e9       	ldi	r25, 0x96	; 150
     814:	11 c0       	rjmp	.+34     	; 0x838 <__floatsisf+0x6a>
     816:	77 23       	and	r23, r23
     818:	21 f0       	breq	.+8      	; 0x822 <__floatsisf+0x54>
     81a:	9e e8       	ldi	r25, 0x8E	; 142
     81c:	87 2f       	mov	r24, r23
     81e:	76 2f       	mov	r23, r22
     820:	05 c0       	rjmp	.+10     	; 0x82c <__floatsisf+0x5e>
     822:	66 23       	and	r22, r22
     824:	71 f0       	breq	.+28     	; 0x842 <__floatsisf+0x74>
     826:	96 e8       	ldi	r25, 0x86	; 134
     828:	86 2f       	mov	r24, r22
     82a:	70 e0       	ldi	r23, 0x00	; 0
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	2a f0       	brmi	.+10     	; 0x83a <__floatsisf+0x6c>
     830:	9a 95       	dec	r25
     832:	66 0f       	add	r22, r22
     834:	77 1f       	adc	r23, r23
     836:	88 1f       	adc	r24, r24
     838:	da f7       	brpl	.-10     	; 0x830 <__floatsisf+0x62>
     83a:	88 0f       	add	r24, r24
     83c:	96 95       	lsr	r25
     83e:	87 95       	ror	r24
     840:	97 f9       	bld	r25, 7
     842:	08 95       	ret

00000844 <__fp_cmp>:
     844:	99 0f       	add	r25, r25
     846:	00 08       	sbc	r0, r0
     848:	55 0f       	add	r21, r21
     84a:	aa 0b       	sbc	r26, r26
     84c:	e0 e8       	ldi	r30, 0x80	; 128
     84e:	fe ef       	ldi	r31, 0xFE	; 254
     850:	16 16       	cp	r1, r22
     852:	17 06       	cpc	r1, r23
     854:	e8 07       	cpc	r30, r24
     856:	f9 07       	cpc	r31, r25
     858:	c0 f0       	brcs	.+48     	; 0x88a <__fp_cmp+0x46>
     85a:	12 16       	cp	r1, r18
     85c:	13 06       	cpc	r1, r19
     85e:	e4 07       	cpc	r30, r20
     860:	f5 07       	cpc	r31, r21
     862:	98 f0       	brcs	.+38     	; 0x88a <__fp_cmp+0x46>
     864:	62 1b       	sub	r22, r18
     866:	73 0b       	sbc	r23, r19
     868:	84 0b       	sbc	r24, r20
     86a:	95 0b       	sbc	r25, r21
     86c:	39 f4       	brne	.+14     	; 0x87c <__fp_cmp+0x38>
     86e:	0a 26       	eor	r0, r26
     870:	61 f0       	breq	.+24     	; 0x88a <__fp_cmp+0x46>
     872:	23 2b       	or	r18, r19
     874:	24 2b       	or	r18, r20
     876:	25 2b       	or	r18, r21
     878:	21 f4       	brne	.+8      	; 0x882 <__fp_cmp+0x3e>
     87a:	08 95       	ret
     87c:	0a 26       	eor	r0, r26
     87e:	09 f4       	brne	.+2      	; 0x882 <__fp_cmp+0x3e>
     880:	a1 40       	sbci	r26, 0x01	; 1
     882:	a6 95       	lsr	r26
     884:	8f ef       	ldi	r24, 0xFF	; 255
     886:	81 1d       	adc	r24, r1
     888:	81 1d       	adc	r24, r1
     88a:	08 95       	ret

0000088c <__fp_inf>:
     88c:	97 f9       	bld	r25, 7
     88e:	9f 67       	ori	r25, 0x7F	; 127
     890:	80 e8       	ldi	r24, 0x80	; 128
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	08 95       	ret

00000898 <__fp_mpack>:
     898:	9f 3f       	cpi	r25, 0xFF	; 255
     89a:	31 f0       	breq	.+12     	; 0x8a8 <__fp_mpack_finite+0xc>

0000089c <__fp_mpack_finite>:
     89c:	91 50       	subi	r25, 0x01	; 1
     89e:	20 f4       	brcc	.+8      	; 0x8a8 <__fp_mpack_finite+0xc>
     8a0:	87 95       	ror	r24
     8a2:	77 95       	ror	r23
     8a4:	67 95       	ror	r22
     8a6:	b7 95       	ror	r27
     8a8:	88 0f       	add	r24, r24
     8aa:	91 1d       	adc	r25, r1
     8ac:	96 95       	lsr	r25
     8ae:	87 95       	ror	r24
     8b0:	97 f9       	bld	r25, 7
     8b2:	08 95       	ret

000008b4 <__fp_nan>:
     8b4:	9f ef       	ldi	r25, 0xFF	; 255
     8b6:	80 ec       	ldi	r24, 0xC0	; 192
     8b8:	08 95       	ret

000008ba <__fp_pscA>:
     8ba:	00 24       	eor	r0, r0
     8bc:	0a 94       	dec	r0
     8be:	16 16       	cp	r1, r22
     8c0:	17 06       	cpc	r1, r23
     8c2:	18 06       	cpc	r1, r24
     8c4:	09 06       	cpc	r0, r25
     8c6:	08 95       	ret

000008c8 <__fp_pscB>:
     8c8:	00 24       	eor	r0, r0
     8ca:	0a 94       	dec	r0
     8cc:	12 16       	cp	r1, r18
     8ce:	13 06       	cpc	r1, r19
     8d0:	14 06       	cpc	r1, r20
     8d2:	05 06       	cpc	r0, r21
     8d4:	08 95       	ret

000008d6 <__fp_round>:
     8d6:	09 2e       	mov	r0, r25
     8d8:	03 94       	inc	r0
     8da:	00 0c       	add	r0, r0
     8dc:	11 f4       	brne	.+4      	; 0x8e2 <__fp_round+0xc>
     8de:	88 23       	and	r24, r24
     8e0:	52 f0       	brmi	.+20     	; 0x8f6 <__fp_round+0x20>
     8e2:	bb 0f       	add	r27, r27
     8e4:	40 f4       	brcc	.+16     	; 0x8f6 <__fp_round+0x20>
     8e6:	bf 2b       	or	r27, r31
     8e8:	11 f4       	brne	.+4      	; 0x8ee <__fp_round+0x18>
     8ea:	60 ff       	sbrs	r22, 0
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <__fp_round+0x20>
     8ee:	6f 5f       	subi	r22, 0xFF	; 255
     8f0:	7f 4f       	sbci	r23, 0xFF	; 255
     8f2:	8f 4f       	sbci	r24, 0xFF	; 255
     8f4:	9f 4f       	sbci	r25, 0xFF	; 255
     8f6:	08 95       	ret

000008f8 <__fp_split3>:
     8f8:	57 fd       	sbrc	r21, 7
     8fa:	90 58       	subi	r25, 0x80	; 128
     8fc:	44 0f       	add	r20, r20
     8fe:	55 1f       	adc	r21, r21
     900:	59 f0       	breq	.+22     	; 0x918 <__fp_splitA+0x10>
     902:	5f 3f       	cpi	r21, 0xFF	; 255
     904:	71 f0       	breq	.+28     	; 0x922 <__fp_splitA+0x1a>
     906:	47 95       	ror	r20

00000908 <__fp_splitA>:
     908:	88 0f       	add	r24, r24
     90a:	97 fb       	bst	r25, 7
     90c:	99 1f       	adc	r25, r25
     90e:	61 f0       	breq	.+24     	; 0x928 <__fp_splitA+0x20>
     910:	9f 3f       	cpi	r25, 0xFF	; 255
     912:	79 f0       	breq	.+30     	; 0x932 <__fp_splitA+0x2a>
     914:	87 95       	ror	r24
     916:	08 95       	ret
     918:	12 16       	cp	r1, r18
     91a:	13 06       	cpc	r1, r19
     91c:	14 06       	cpc	r1, r20
     91e:	55 1f       	adc	r21, r21
     920:	f2 cf       	rjmp	.-28     	; 0x906 <__fp_split3+0xe>
     922:	46 95       	lsr	r20
     924:	f1 df       	rcall	.-30     	; 0x908 <__fp_splitA>
     926:	08 c0       	rjmp	.+16     	; 0x938 <__fp_splitA+0x30>
     928:	16 16       	cp	r1, r22
     92a:	17 06       	cpc	r1, r23
     92c:	18 06       	cpc	r1, r24
     92e:	99 1f       	adc	r25, r25
     930:	f1 cf       	rjmp	.-30     	; 0x914 <__fp_splitA+0xc>
     932:	86 95       	lsr	r24
     934:	71 05       	cpc	r23, r1
     936:	61 05       	cpc	r22, r1
     938:	08 94       	sec
     93a:	08 95       	ret

0000093c <__fp_zero>:
     93c:	e8 94       	clt

0000093e <__fp_szero>:
     93e:	bb 27       	eor	r27, r27
     940:	66 27       	eor	r22, r22
     942:	77 27       	eor	r23, r23
     944:	cb 01       	movw	r24, r22
     946:	97 f9       	bld	r25, 7
     948:	08 95       	ret

0000094a <__mulsf3>:
     94a:	0b d0       	rcall	.+22     	; 0x962 <__mulsf3x>
     94c:	c4 cf       	rjmp	.-120    	; 0x8d6 <__fp_round>
     94e:	b5 df       	rcall	.-150    	; 0x8ba <__fp_pscA>
     950:	28 f0       	brcs	.+10     	; 0x95c <__mulsf3+0x12>
     952:	ba df       	rcall	.-140    	; 0x8c8 <__fp_pscB>
     954:	18 f0       	brcs	.+6      	; 0x95c <__mulsf3+0x12>
     956:	95 23       	and	r25, r21
     958:	09 f0       	breq	.+2      	; 0x95c <__mulsf3+0x12>
     95a:	98 cf       	rjmp	.-208    	; 0x88c <__fp_inf>
     95c:	ab cf       	rjmp	.-170    	; 0x8b4 <__fp_nan>
     95e:	11 24       	eor	r1, r1
     960:	ee cf       	rjmp	.-36     	; 0x93e <__fp_szero>

00000962 <__mulsf3x>:
     962:	ca df       	rcall	.-108    	; 0x8f8 <__fp_split3>
     964:	a0 f3       	brcs	.-24     	; 0x94e <__mulsf3+0x4>

00000966 <__mulsf3_pse>:
     966:	95 9f       	mul	r25, r21
     968:	d1 f3       	breq	.-12     	; 0x95e <__mulsf3+0x14>
     96a:	95 0f       	add	r25, r21
     96c:	50 e0       	ldi	r21, 0x00	; 0
     96e:	55 1f       	adc	r21, r21
     970:	62 9f       	mul	r22, r18
     972:	f0 01       	movw	r30, r0
     974:	72 9f       	mul	r23, r18
     976:	bb 27       	eor	r27, r27
     978:	f0 0d       	add	r31, r0
     97a:	b1 1d       	adc	r27, r1
     97c:	63 9f       	mul	r22, r19
     97e:	aa 27       	eor	r26, r26
     980:	f0 0d       	add	r31, r0
     982:	b1 1d       	adc	r27, r1
     984:	aa 1f       	adc	r26, r26
     986:	64 9f       	mul	r22, r20
     988:	66 27       	eor	r22, r22
     98a:	b0 0d       	add	r27, r0
     98c:	a1 1d       	adc	r26, r1
     98e:	66 1f       	adc	r22, r22
     990:	82 9f       	mul	r24, r18
     992:	22 27       	eor	r18, r18
     994:	b0 0d       	add	r27, r0
     996:	a1 1d       	adc	r26, r1
     998:	62 1f       	adc	r22, r18
     99a:	73 9f       	mul	r23, r19
     99c:	b0 0d       	add	r27, r0
     99e:	a1 1d       	adc	r26, r1
     9a0:	62 1f       	adc	r22, r18
     9a2:	83 9f       	mul	r24, r19
     9a4:	a0 0d       	add	r26, r0
     9a6:	61 1d       	adc	r22, r1
     9a8:	22 1f       	adc	r18, r18
     9aa:	74 9f       	mul	r23, r20
     9ac:	33 27       	eor	r19, r19
     9ae:	a0 0d       	add	r26, r0
     9b0:	61 1d       	adc	r22, r1
     9b2:	23 1f       	adc	r18, r19
     9b4:	84 9f       	mul	r24, r20
     9b6:	60 0d       	add	r22, r0
     9b8:	21 1d       	adc	r18, r1
     9ba:	82 2f       	mov	r24, r18
     9bc:	76 2f       	mov	r23, r22
     9be:	6a 2f       	mov	r22, r26
     9c0:	11 24       	eor	r1, r1
     9c2:	9f 57       	subi	r25, 0x7F	; 127
     9c4:	50 40       	sbci	r21, 0x00	; 0
     9c6:	8a f0       	brmi	.+34     	; 0x9ea <__mulsf3_pse+0x84>
     9c8:	e1 f0       	breq	.+56     	; 0xa02 <__mulsf3_pse+0x9c>
     9ca:	88 23       	and	r24, r24
     9cc:	4a f0       	brmi	.+18     	; 0x9e0 <__mulsf3_pse+0x7a>
     9ce:	ee 0f       	add	r30, r30
     9d0:	ff 1f       	adc	r31, r31
     9d2:	bb 1f       	adc	r27, r27
     9d4:	66 1f       	adc	r22, r22
     9d6:	77 1f       	adc	r23, r23
     9d8:	88 1f       	adc	r24, r24
     9da:	91 50       	subi	r25, 0x01	; 1
     9dc:	50 40       	sbci	r21, 0x00	; 0
     9de:	a9 f7       	brne	.-22     	; 0x9ca <__mulsf3_pse+0x64>
     9e0:	9e 3f       	cpi	r25, 0xFE	; 254
     9e2:	51 05       	cpc	r21, r1
     9e4:	70 f0       	brcs	.+28     	; 0xa02 <__mulsf3_pse+0x9c>
     9e6:	52 cf       	rjmp	.-348    	; 0x88c <__fp_inf>
     9e8:	aa cf       	rjmp	.-172    	; 0x93e <__fp_szero>
     9ea:	5f 3f       	cpi	r21, 0xFF	; 255
     9ec:	ec f3       	brlt	.-6      	; 0x9e8 <__mulsf3_pse+0x82>
     9ee:	98 3e       	cpi	r25, 0xE8	; 232
     9f0:	dc f3       	brlt	.-10     	; 0x9e8 <__mulsf3_pse+0x82>
     9f2:	86 95       	lsr	r24
     9f4:	77 95       	ror	r23
     9f6:	67 95       	ror	r22
     9f8:	b7 95       	ror	r27
     9fa:	f7 95       	ror	r31
     9fc:	e7 95       	ror	r30
     9fe:	9f 5f       	subi	r25, 0xFF	; 255
     a00:	c1 f7       	brne	.-16     	; 0x9f2 <__mulsf3_pse+0x8c>
     a02:	fe 2b       	or	r31, r30
     a04:	88 0f       	add	r24, r24
     a06:	91 1d       	adc	r25, r1
     a08:	96 95       	lsr	r25
     a0a:	87 95       	ror	r24
     a0c:	97 f9       	bld	r25, 7
     a0e:	08 95       	ret
     a10:	11 f4       	brne	.+4      	; 0xa16 <__mulsf3_pse+0xb0>
     a12:	0e f4       	brtc	.+2      	; 0xa16 <__mulsf3_pse+0xb0>
     a14:	4f cf       	rjmp	.-354    	; 0x8b4 <__fp_nan>
     a16:	40 cf       	rjmp	.-384    	; 0x898 <__fp_mpack>

00000a18 <sqrt>:
     a18:	77 df       	rcall	.-274    	; 0x908 <__fp_splitA>
     a1a:	d0 f3       	brcs	.-12     	; 0xa10 <__mulsf3_pse+0xaa>
     a1c:	99 23       	and	r25, r25
     a1e:	d9 f3       	breq	.-10     	; 0xa16 <__mulsf3_pse+0xb0>
     a20:	ce f3       	brts	.-14     	; 0xa14 <__mulsf3_pse+0xae>
     a22:	9f 57       	subi	r25, 0x7F	; 127
     a24:	55 0b       	sbc	r21, r21
     a26:	87 ff       	sbrs	r24, 7
     a28:	35 d0       	rcall	.+106    	; 0xa94 <__fp_norm2>
     a2a:	00 24       	eor	r0, r0
     a2c:	a0 e6       	ldi	r26, 0x60	; 96
     a2e:	40 ea       	ldi	r20, 0xA0	; 160
     a30:	90 01       	movw	r18, r0
     a32:	80 58       	subi	r24, 0x80	; 128
     a34:	56 95       	lsr	r21
     a36:	97 95       	ror	r25
     a38:	28 f4       	brcc	.+10     	; 0xa44 <sqrt+0x2c>
     a3a:	80 5c       	subi	r24, 0xC0	; 192
     a3c:	66 0f       	add	r22, r22
     a3e:	77 1f       	adc	r23, r23
     a40:	88 1f       	adc	r24, r24
     a42:	20 f0       	brcs	.+8      	; 0xa4c <sqrt+0x34>
     a44:	26 17       	cp	r18, r22
     a46:	37 07       	cpc	r19, r23
     a48:	48 07       	cpc	r20, r24
     a4a:	30 f4       	brcc	.+12     	; 0xa58 <sqrt+0x40>
     a4c:	62 1b       	sub	r22, r18
     a4e:	73 0b       	sbc	r23, r19
     a50:	84 0b       	sbc	r24, r20
     a52:	20 29       	or	r18, r0
     a54:	31 29       	or	r19, r1
     a56:	4a 2b       	or	r20, r26
     a58:	a6 95       	lsr	r26
     a5a:	17 94       	ror	r1
     a5c:	07 94       	ror	r0
     a5e:	20 25       	eor	r18, r0
     a60:	31 25       	eor	r19, r1
     a62:	4a 27       	eor	r20, r26
     a64:	58 f7       	brcc	.-42     	; 0xa3c <sqrt+0x24>
     a66:	66 0f       	add	r22, r22
     a68:	77 1f       	adc	r23, r23
     a6a:	88 1f       	adc	r24, r24
     a6c:	20 f0       	brcs	.+8      	; 0xa76 <sqrt+0x5e>
     a6e:	26 17       	cp	r18, r22
     a70:	37 07       	cpc	r19, r23
     a72:	48 07       	cpc	r20, r24
     a74:	30 f4       	brcc	.+12     	; 0xa82 <sqrt+0x6a>
     a76:	62 0b       	sbc	r22, r18
     a78:	73 0b       	sbc	r23, r19
     a7a:	84 0b       	sbc	r24, r20
     a7c:	20 0d       	add	r18, r0
     a7e:	31 1d       	adc	r19, r1
     a80:	41 1d       	adc	r20, r1
     a82:	a0 95       	com	r26
     a84:	81 f7       	brne	.-32     	; 0xa66 <sqrt+0x4e>
     a86:	b9 01       	movw	r22, r18
     a88:	84 2f       	mov	r24, r20
     a8a:	91 58       	subi	r25, 0x81	; 129
     a8c:	88 0f       	add	r24, r24
     a8e:	96 95       	lsr	r25
     a90:	87 95       	ror	r24
     a92:	08 95       	ret

00000a94 <__fp_norm2>:
     a94:	91 50       	subi	r25, 0x01	; 1
     a96:	50 40       	sbci	r21, 0x00	; 0
     a98:	66 0f       	add	r22, r22
     a9a:	77 1f       	adc	r23, r23
     a9c:	88 1f       	adc	r24, r24
     a9e:	d2 f7       	brpl	.-12     	; 0xa94 <__fp_norm2>
     aa0:	08 95       	ret

00000aa2 <__divmodhi4>:
     aa2:	97 fb       	bst	r25, 7
     aa4:	07 2e       	mov	r0, r23
     aa6:	16 f4       	brtc	.+4      	; 0xaac <__divmodhi4+0xa>
     aa8:	00 94       	com	r0
     aaa:	06 d0       	rcall	.+12     	; 0xab8 <__divmodhi4_neg1>
     aac:	77 fd       	sbrc	r23, 7
     aae:	08 d0       	rcall	.+16     	; 0xac0 <__divmodhi4_neg2>
     ab0:	0b d0       	rcall	.+22     	; 0xac8 <__udivmodhi4>
     ab2:	07 fc       	sbrc	r0, 7
     ab4:	05 d0       	rcall	.+10     	; 0xac0 <__divmodhi4_neg2>
     ab6:	3e f4       	brtc	.+14     	; 0xac6 <__divmodhi4_exit>

00000ab8 <__divmodhi4_neg1>:
     ab8:	90 95       	com	r25
     aba:	81 95       	neg	r24
     abc:	9f 4f       	sbci	r25, 0xFF	; 255
     abe:	08 95       	ret

00000ac0 <__divmodhi4_neg2>:
     ac0:	70 95       	com	r23
     ac2:	61 95       	neg	r22
     ac4:	7f 4f       	sbci	r23, 0xFF	; 255

00000ac6 <__divmodhi4_exit>:
     ac6:	08 95       	ret

00000ac8 <__udivmodhi4>:
     ac8:	aa 1b       	sub	r26, r26
     aca:	bb 1b       	sub	r27, r27
     acc:	51 e1       	ldi	r21, 0x11	; 17
     ace:	07 c0       	rjmp	.+14     	; 0xade <__udivmodhi4_ep>

00000ad0 <__udivmodhi4_loop>:
     ad0:	aa 1f       	adc	r26, r26
     ad2:	bb 1f       	adc	r27, r27
     ad4:	a6 17       	cp	r26, r22
     ad6:	b7 07       	cpc	r27, r23
     ad8:	10 f0       	brcs	.+4      	; 0xade <__udivmodhi4_ep>
     ada:	a6 1b       	sub	r26, r22
     adc:	b7 0b       	sbc	r27, r23

00000ade <__udivmodhi4_ep>:
     ade:	88 1f       	adc	r24, r24
     ae0:	99 1f       	adc	r25, r25
     ae2:	5a 95       	dec	r21
     ae4:	a9 f7       	brne	.-22     	; 0xad0 <__udivmodhi4_loop>
     ae6:	80 95       	com	r24
     ae8:	90 95       	com	r25
     aea:	bc 01       	movw	r22, r24
     aec:	cd 01       	movw	r24, r26
     aee:	08 95       	ret

00000af0 <atoi>:
     af0:	fc 01       	movw	r30, r24
     af2:	88 27       	eor	r24, r24
     af4:	99 27       	eor	r25, r25
     af6:	e8 94       	clt
     af8:	21 91       	ld	r18, Z+
     afa:	20 32       	cpi	r18, 0x20	; 32
     afc:	e9 f3       	breq	.-6      	; 0xaf8 <atoi+0x8>
     afe:	29 30       	cpi	r18, 0x09	; 9
     b00:	10 f0       	brcs	.+4      	; 0xb06 <atoi+0x16>
     b02:	2e 30       	cpi	r18, 0x0E	; 14
     b04:	c8 f3       	brcs	.-14     	; 0xaf8 <atoi+0x8>
     b06:	2b 32       	cpi	r18, 0x2B	; 43
     b08:	39 f0       	breq	.+14     	; 0xb18 <atoi+0x28>
     b0a:	2d 32       	cpi	r18, 0x2D	; 45
     b0c:	31 f4       	brne	.+12     	; 0xb1a <atoi+0x2a>
     b0e:	68 94       	set
     b10:	03 c0       	rjmp	.+6      	; 0xb18 <atoi+0x28>
     b12:	0b d0       	rcall	.+22     	; 0xb2a <__mulhi_const_10>
     b14:	82 0f       	add	r24, r18
     b16:	91 1d       	adc	r25, r1
     b18:	21 91       	ld	r18, Z+
     b1a:	20 53       	subi	r18, 0x30	; 48
     b1c:	2a 30       	cpi	r18, 0x0A	; 10
     b1e:	c8 f3       	brcs	.-14     	; 0xb12 <atoi+0x22>
     b20:	1e f4       	brtc	.+6      	; 0xb28 <atoi+0x38>
     b22:	90 95       	com	r25
     b24:	81 95       	neg	r24
     b26:	9f 4f       	sbci	r25, 0xFF	; 255
     b28:	08 95       	ret

00000b2a <__mulhi_const_10>:
     b2a:	7a e0       	ldi	r23, 0x0A	; 10
     b2c:	97 9f       	mul	r25, r23
     b2e:	90 2d       	mov	r25, r0
     b30:	87 9f       	mul	r24, r23
     b32:	80 2d       	mov	r24, r0
     b34:	91 0d       	add	r25, r1
     b36:	11 24       	eor	r1, r1
     b38:	08 95       	ret

00000b3a <sprintf>:
     b3a:	ae e0       	ldi	r26, 0x0E	; 14
     b3c:	b0 e0       	ldi	r27, 0x00	; 0
     b3e:	e2 ea       	ldi	r30, 0xA2	; 162
     b40:	f5 e0       	ldi	r31, 0x05	; 5
     b42:	aa c2       	rjmp	.+1364   	; 0x1098 <__prologue_saves__+0x1c>
     b44:	0d 89       	ldd	r16, Y+21	; 0x15
     b46:	1e 89       	ldd	r17, Y+22	; 0x16
     b48:	86 e0       	ldi	r24, 0x06	; 6
     b4a:	8c 83       	std	Y+4, r24	; 0x04
     b4c:	1a 83       	std	Y+2, r17	; 0x02
     b4e:	09 83       	std	Y+1, r16	; 0x01
     b50:	8f ef       	ldi	r24, 0xFF	; 255
     b52:	9f e7       	ldi	r25, 0x7F	; 127
     b54:	9e 83       	std	Y+6, r25	; 0x06
     b56:	8d 83       	std	Y+5, r24	; 0x05
     b58:	ae 01       	movw	r20, r28
     b5a:	47 5e       	subi	r20, 0xE7	; 231
     b5c:	5f 4f       	sbci	r21, 0xFF	; 255
     b5e:	6f 89       	ldd	r22, Y+23	; 0x17
     b60:	78 8d       	ldd	r23, Y+24	; 0x18
     b62:	ce 01       	movw	r24, r28
     b64:	01 96       	adiw	r24, 0x01	; 1
     b66:	08 d0       	rcall	.+16     	; 0xb78 <vfprintf>
     b68:	ef 81       	ldd	r30, Y+7	; 0x07
     b6a:	f8 85       	ldd	r31, Y+8	; 0x08
     b6c:	e0 0f       	add	r30, r16
     b6e:	f1 1f       	adc	r31, r17
     b70:	10 82       	st	Z, r1
     b72:	2e 96       	adiw	r28, 0x0e	; 14
     b74:	e4 e0       	ldi	r30, 0x04	; 4
     b76:	ac c2       	rjmp	.+1368   	; 0x10d0 <__epilogue_restores__+0x1c>

00000b78 <vfprintf>:
     b78:	ab e0       	ldi	r26, 0x0B	; 11
     b7a:	b0 e0       	ldi	r27, 0x00	; 0
     b7c:	e1 ec       	ldi	r30, 0xC1	; 193
     b7e:	f5 e0       	ldi	r31, 0x05	; 5
     b80:	7d c2       	rjmp	.+1274   	; 0x107c <__prologue_saves__>
     b82:	6c 01       	movw	r12, r24
     b84:	7b 01       	movw	r14, r22
     b86:	8a 01       	movw	r16, r20
     b88:	fc 01       	movw	r30, r24
     b8a:	17 82       	std	Z+7, r1	; 0x07
     b8c:	16 82       	std	Z+6, r1	; 0x06
     b8e:	83 81       	ldd	r24, Z+3	; 0x03
     b90:	81 ff       	sbrs	r24, 1
     b92:	bf c1       	rjmp	.+894    	; 0xf12 <vfprintf+0x39a>
     b94:	ce 01       	movw	r24, r28
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	3c 01       	movw	r6, r24
     b9a:	f6 01       	movw	r30, r12
     b9c:	93 81       	ldd	r25, Z+3	; 0x03
     b9e:	f7 01       	movw	r30, r14
     ba0:	93 fd       	sbrc	r25, 3
     ba2:	85 91       	lpm	r24, Z+
     ba4:	93 ff       	sbrs	r25, 3
     ba6:	81 91       	ld	r24, Z+
     ba8:	7f 01       	movw	r14, r30
     baa:	88 23       	and	r24, r24
     bac:	09 f4       	brne	.+2      	; 0xbb0 <vfprintf+0x38>
     bae:	ad c1       	rjmp	.+858    	; 0xf0a <vfprintf+0x392>
     bb0:	85 32       	cpi	r24, 0x25	; 37
     bb2:	39 f4       	brne	.+14     	; 0xbc2 <vfprintf+0x4a>
     bb4:	93 fd       	sbrc	r25, 3
     bb6:	85 91       	lpm	r24, Z+
     bb8:	93 ff       	sbrs	r25, 3
     bba:	81 91       	ld	r24, Z+
     bbc:	7f 01       	movw	r14, r30
     bbe:	85 32       	cpi	r24, 0x25	; 37
     bc0:	21 f4       	brne	.+8      	; 0xbca <vfprintf+0x52>
     bc2:	b6 01       	movw	r22, r12
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	c0 d1       	rcall	.+896    	; 0xf48 <fputc>
     bc8:	e8 cf       	rjmp	.-48     	; 0xb9a <vfprintf+0x22>
     bca:	91 2c       	mov	r9, r1
     bcc:	21 2c       	mov	r2, r1
     bce:	31 2c       	mov	r3, r1
     bd0:	ff e1       	ldi	r31, 0x1F	; 31
     bd2:	f3 15       	cp	r31, r3
     bd4:	d8 f0       	brcs	.+54     	; 0xc0c <vfprintf+0x94>
     bd6:	8b 32       	cpi	r24, 0x2B	; 43
     bd8:	79 f0       	breq	.+30     	; 0xbf8 <vfprintf+0x80>
     bda:	38 f4       	brcc	.+14     	; 0xbea <vfprintf+0x72>
     bdc:	80 32       	cpi	r24, 0x20	; 32
     bde:	79 f0       	breq	.+30     	; 0xbfe <vfprintf+0x86>
     be0:	83 32       	cpi	r24, 0x23	; 35
     be2:	a1 f4       	brne	.+40     	; 0xc0c <vfprintf+0x94>
     be4:	23 2d       	mov	r18, r3
     be6:	20 61       	ori	r18, 0x10	; 16
     be8:	1d c0       	rjmp	.+58     	; 0xc24 <vfprintf+0xac>
     bea:	8d 32       	cpi	r24, 0x2D	; 45
     bec:	61 f0       	breq	.+24     	; 0xc06 <vfprintf+0x8e>
     bee:	80 33       	cpi	r24, 0x30	; 48
     bf0:	69 f4       	brne	.+26     	; 0xc0c <vfprintf+0x94>
     bf2:	23 2d       	mov	r18, r3
     bf4:	21 60       	ori	r18, 0x01	; 1
     bf6:	16 c0       	rjmp	.+44     	; 0xc24 <vfprintf+0xac>
     bf8:	83 2d       	mov	r24, r3
     bfa:	82 60       	ori	r24, 0x02	; 2
     bfc:	38 2e       	mov	r3, r24
     bfe:	e3 2d       	mov	r30, r3
     c00:	e4 60       	ori	r30, 0x04	; 4
     c02:	3e 2e       	mov	r3, r30
     c04:	2a c0       	rjmp	.+84     	; 0xc5a <vfprintf+0xe2>
     c06:	f3 2d       	mov	r31, r3
     c08:	f8 60       	ori	r31, 0x08	; 8
     c0a:	1d c0       	rjmp	.+58     	; 0xc46 <vfprintf+0xce>
     c0c:	37 fc       	sbrc	r3, 7
     c0e:	2d c0       	rjmp	.+90     	; 0xc6a <vfprintf+0xf2>
     c10:	20 ed       	ldi	r18, 0xD0	; 208
     c12:	28 0f       	add	r18, r24
     c14:	2a 30       	cpi	r18, 0x0A	; 10
     c16:	40 f0       	brcs	.+16     	; 0xc28 <vfprintf+0xb0>
     c18:	8e 32       	cpi	r24, 0x2E	; 46
     c1a:	b9 f4       	brne	.+46     	; 0xc4a <vfprintf+0xd2>
     c1c:	36 fc       	sbrc	r3, 6
     c1e:	75 c1       	rjmp	.+746    	; 0xf0a <vfprintf+0x392>
     c20:	23 2d       	mov	r18, r3
     c22:	20 64       	ori	r18, 0x40	; 64
     c24:	32 2e       	mov	r3, r18
     c26:	19 c0       	rjmp	.+50     	; 0xc5a <vfprintf+0xe2>
     c28:	36 fe       	sbrs	r3, 6
     c2a:	06 c0       	rjmp	.+12     	; 0xc38 <vfprintf+0xc0>
     c2c:	8a e0       	ldi	r24, 0x0A	; 10
     c2e:	98 9e       	mul	r9, r24
     c30:	20 0d       	add	r18, r0
     c32:	11 24       	eor	r1, r1
     c34:	92 2e       	mov	r9, r18
     c36:	11 c0       	rjmp	.+34     	; 0xc5a <vfprintf+0xe2>
     c38:	ea e0       	ldi	r30, 0x0A	; 10
     c3a:	2e 9e       	mul	r2, r30
     c3c:	20 0d       	add	r18, r0
     c3e:	11 24       	eor	r1, r1
     c40:	22 2e       	mov	r2, r18
     c42:	f3 2d       	mov	r31, r3
     c44:	f0 62       	ori	r31, 0x20	; 32
     c46:	3f 2e       	mov	r3, r31
     c48:	08 c0       	rjmp	.+16     	; 0xc5a <vfprintf+0xe2>
     c4a:	8c 36       	cpi	r24, 0x6C	; 108
     c4c:	21 f4       	brne	.+8      	; 0xc56 <vfprintf+0xde>
     c4e:	83 2d       	mov	r24, r3
     c50:	80 68       	ori	r24, 0x80	; 128
     c52:	38 2e       	mov	r3, r24
     c54:	02 c0       	rjmp	.+4      	; 0xc5a <vfprintf+0xe2>
     c56:	88 36       	cpi	r24, 0x68	; 104
     c58:	41 f4       	brne	.+16     	; 0xc6a <vfprintf+0xf2>
     c5a:	f7 01       	movw	r30, r14
     c5c:	93 fd       	sbrc	r25, 3
     c5e:	85 91       	lpm	r24, Z+
     c60:	93 ff       	sbrs	r25, 3
     c62:	81 91       	ld	r24, Z+
     c64:	7f 01       	movw	r14, r30
     c66:	81 11       	cpse	r24, r1
     c68:	b3 cf       	rjmp	.-154    	; 0xbd0 <vfprintf+0x58>
     c6a:	98 2f       	mov	r25, r24
     c6c:	9f 7d       	andi	r25, 0xDF	; 223
     c6e:	95 54       	subi	r25, 0x45	; 69
     c70:	93 30       	cpi	r25, 0x03	; 3
     c72:	28 f4       	brcc	.+10     	; 0xc7e <vfprintf+0x106>
     c74:	0c 5f       	subi	r16, 0xFC	; 252
     c76:	1f 4f       	sbci	r17, 0xFF	; 255
     c78:	9f e3       	ldi	r25, 0x3F	; 63
     c7a:	99 83       	std	Y+1, r25	; 0x01
     c7c:	0d c0       	rjmp	.+26     	; 0xc98 <vfprintf+0x120>
     c7e:	83 36       	cpi	r24, 0x63	; 99
     c80:	31 f0       	breq	.+12     	; 0xc8e <vfprintf+0x116>
     c82:	83 37       	cpi	r24, 0x73	; 115
     c84:	71 f0       	breq	.+28     	; 0xca2 <vfprintf+0x12a>
     c86:	83 35       	cpi	r24, 0x53	; 83
     c88:	09 f0       	breq	.+2      	; 0xc8c <vfprintf+0x114>
     c8a:	55 c0       	rjmp	.+170    	; 0xd36 <vfprintf+0x1be>
     c8c:	20 c0       	rjmp	.+64     	; 0xcce <vfprintf+0x156>
     c8e:	f8 01       	movw	r30, r16
     c90:	80 81       	ld	r24, Z
     c92:	89 83       	std	Y+1, r24	; 0x01
     c94:	0e 5f       	subi	r16, 0xFE	; 254
     c96:	1f 4f       	sbci	r17, 0xFF	; 255
     c98:	88 24       	eor	r8, r8
     c9a:	83 94       	inc	r8
     c9c:	91 2c       	mov	r9, r1
     c9e:	53 01       	movw	r10, r6
     ca0:	12 c0       	rjmp	.+36     	; 0xcc6 <vfprintf+0x14e>
     ca2:	28 01       	movw	r4, r16
     ca4:	f2 e0       	ldi	r31, 0x02	; 2
     ca6:	4f 0e       	add	r4, r31
     ca8:	51 1c       	adc	r5, r1
     caa:	f8 01       	movw	r30, r16
     cac:	a0 80       	ld	r10, Z
     cae:	b1 80       	ldd	r11, Z+1	; 0x01
     cb0:	36 fe       	sbrs	r3, 6
     cb2:	03 c0       	rjmp	.+6      	; 0xcba <vfprintf+0x142>
     cb4:	69 2d       	mov	r22, r9
     cb6:	70 e0       	ldi	r23, 0x00	; 0
     cb8:	02 c0       	rjmp	.+4      	; 0xcbe <vfprintf+0x146>
     cba:	6f ef       	ldi	r22, 0xFF	; 255
     cbc:	7f ef       	ldi	r23, 0xFF	; 255
     cbe:	c5 01       	movw	r24, r10
     cc0:	38 d1       	rcall	.+624    	; 0xf32 <strnlen>
     cc2:	4c 01       	movw	r8, r24
     cc4:	82 01       	movw	r16, r4
     cc6:	f3 2d       	mov	r31, r3
     cc8:	ff 77       	andi	r31, 0x7F	; 127
     cca:	3f 2e       	mov	r3, r31
     ccc:	15 c0       	rjmp	.+42     	; 0xcf8 <vfprintf+0x180>
     cce:	28 01       	movw	r4, r16
     cd0:	22 e0       	ldi	r18, 0x02	; 2
     cd2:	42 0e       	add	r4, r18
     cd4:	51 1c       	adc	r5, r1
     cd6:	f8 01       	movw	r30, r16
     cd8:	a0 80       	ld	r10, Z
     cda:	b1 80       	ldd	r11, Z+1	; 0x01
     cdc:	36 fe       	sbrs	r3, 6
     cde:	03 c0       	rjmp	.+6      	; 0xce6 <vfprintf+0x16e>
     ce0:	69 2d       	mov	r22, r9
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <vfprintf+0x172>
     ce6:	6f ef       	ldi	r22, 0xFF	; 255
     ce8:	7f ef       	ldi	r23, 0xFF	; 255
     cea:	c5 01       	movw	r24, r10
     cec:	17 d1       	rcall	.+558    	; 0xf1c <strnlen_P>
     cee:	4c 01       	movw	r8, r24
     cf0:	f3 2d       	mov	r31, r3
     cf2:	f0 68       	ori	r31, 0x80	; 128
     cf4:	3f 2e       	mov	r3, r31
     cf6:	82 01       	movw	r16, r4
     cf8:	33 fc       	sbrc	r3, 3
     cfa:	19 c0       	rjmp	.+50     	; 0xd2e <vfprintf+0x1b6>
     cfc:	82 2d       	mov	r24, r2
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	88 16       	cp	r8, r24
     d02:	99 06       	cpc	r9, r25
     d04:	a0 f4       	brcc	.+40     	; 0xd2e <vfprintf+0x1b6>
     d06:	b6 01       	movw	r22, r12
     d08:	80 e2       	ldi	r24, 0x20	; 32
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	1d d1       	rcall	.+570    	; 0xf48 <fputc>
     d0e:	2a 94       	dec	r2
     d10:	f5 cf       	rjmp	.-22     	; 0xcfc <vfprintf+0x184>
     d12:	f5 01       	movw	r30, r10
     d14:	37 fc       	sbrc	r3, 7
     d16:	85 91       	lpm	r24, Z+
     d18:	37 fe       	sbrs	r3, 7
     d1a:	81 91       	ld	r24, Z+
     d1c:	5f 01       	movw	r10, r30
     d1e:	b6 01       	movw	r22, r12
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	12 d1       	rcall	.+548    	; 0xf48 <fputc>
     d24:	21 10       	cpse	r2, r1
     d26:	2a 94       	dec	r2
     d28:	21 e0       	ldi	r18, 0x01	; 1
     d2a:	82 1a       	sub	r8, r18
     d2c:	91 08       	sbc	r9, r1
     d2e:	81 14       	cp	r8, r1
     d30:	91 04       	cpc	r9, r1
     d32:	79 f7       	brne	.-34     	; 0xd12 <vfprintf+0x19a>
     d34:	e1 c0       	rjmp	.+450    	; 0xef8 <vfprintf+0x380>
     d36:	84 36       	cpi	r24, 0x64	; 100
     d38:	11 f0       	breq	.+4      	; 0xd3e <vfprintf+0x1c6>
     d3a:	89 36       	cpi	r24, 0x69	; 105
     d3c:	39 f5       	brne	.+78     	; 0xd8c <vfprintf+0x214>
     d3e:	f8 01       	movw	r30, r16
     d40:	37 fe       	sbrs	r3, 7
     d42:	07 c0       	rjmp	.+14     	; 0xd52 <vfprintf+0x1da>
     d44:	60 81       	ld	r22, Z
     d46:	71 81       	ldd	r23, Z+1	; 0x01
     d48:	82 81       	ldd	r24, Z+2	; 0x02
     d4a:	93 81       	ldd	r25, Z+3	; 0x03
     d4c:	0c 5f       	subi	r16, 0xFC	; 252
     d4e:	1f 4f       	sbci	r17, 0xFF	; 255
     d50:	08 c0       	rjmp	.+16     	; 0xd62 <vfprintf+0x1ea>
     d52:	60 81       	ld	r22, Z
     d54:	71 81       	ldd	r23, Z+1	; 0x01
     d56:	07 2e       	mov	r0, r23
     d58:	00 0c       	add	r0, r0
     d5a:	88 0b       	sbc	r24, r24
     d5c:	99 0b       	sbc	r25, r25
     d5e:	0e 5f       	subi	r16, 0xFE	; 254
     d60:	1f 4f       	sbci	r17, 0xFF	; 255
     d62:	f3 2d       	mov	r31, r3
     d64:	ff 76       	andi	r31, 0x6F	; 111
     d66:	3f 2e       	mov	r3, r31
     d68:	97 ff       	sbrs	r25, 7
     d6a:	09 c0       	rjmp	.+18     	; 0xd7e <vfprintf+0x206>
     d6c:	90 95       	com	r25
     d6e:	80 95       	com	r24
     d70:	70 95       	com	r23
     d72:	61 95       	neg	r22
     d74:	7f 4f       	sbci	r23, 0xFF	; 255
     d76:	8f 4f       	sbci	r24, 0xFF	; 255
     d78:	9f 4f       	sbci	r25, 0xFF	; 255
     d7a:	f0 68       	ori	r31, 0x80	; 128
     d7c:	3f 2e       	mov	r3, r31
     d7e:	2a e0       	ldi	r18, 0x0A	; 10
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	a3 01       	movw	r20, r6
     d84:	1d d1       	rcall	.+570    	; 0xfc0 <__ultoa_invert>
     d86:	88 2e       	mov	r8, r24
     d88:	86 18       	sub	r8, r6
     d8a:	44 c0       	rjmp	.+136    	; 0xe14 <vfprintf+0x29c>
     d8c:	85 37       	cpi	r24, 0x75	; 117
     d8e:	31 f4       	brne	.+12     	; 0xd9c <vfprintf+0x224>
     d90:	23 2d       	mov	r18, r3
     d92:	2f 7e       	andi	r18, 0xEF	; 239
     d94:	b2 2e       	mov	r11, r18
     d96:	2a e0       	ldi	r18, 0x0A	; 10
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	25 c0       	rjmp	.+74     	; 0xde6 <vfprintf+0x26e>
     d9c:	93 2d       	mov	r25, r3
     d9e:	99 7f       	andi	r25, 0xF9	; 249
     da0:	b9 2e       	mov	r11, r25
     da2:	8f 36       	cpi	r24, 0x6F	; 111
     da4:	c1 f0       	breq	.+48     	; 0xdd6 <vfprintf+0x25e>
     da6:	18 f4       	brcc	.+6      	; 0xdae <vfprintf+0x236>
     da8:	88 35       	cpi	r24, 0x58	; 88
     daa:	79 f0       	breq	.+30     	; 0xdca <vfprintf+0x252>
     dac:	ae c0       	rjmp	.+348    	; 0xf0a <vfprintf+0x392>
     dae:	80 37       	cpi	r24, 0x70	; 112
     db0:	19 f0       	breq	.+6      	; 0xdb8 <vfprintf+0x240>
     db2:	88 37       	cpi	r24, 0x78	; 120
     db4:	21 f0       	breq	.+8      	; 0xdbe <vfprintf+0x246>
     db6:	a9 c0       	rjmp	.+338    	; 0xf0a <vfprintf+0x392>
     db8:	e9 2f       	mov	r30, r25
     dba:	e0 61       	ori	r30, 0x10	; 16
     dbc:	be 2e       	mov	r11, r30
     dbe:	b4 fe       	sbrs	r11, 4
     dc0:	0d c0       	rjmp	.+26     	; 0xddc <vfprintf+0x264>
     dc2:	fb 2d       	mov	r31, r11
     dc4:	f4 60       	ori	r31, 0x04	; 4
     dc6:	bf 2e       	mov	r11, r31
     dc8:	09 c0       	rjmp	.+18     	; 0xddc <vfprintf+0x264>
     dca:	34 fe       	sbrs	r3, 4
     dcc:	0a c0       	rjmp	.+20     	; 0xde2 <vfprintf+0x26a>
     dce:	29 2f       	mov	r18, r25
     dd0:	26 60       	ori	r18, 0x06	; 6
     dd2:	b2 2e       	mov	r11, r18
     dd4:	06 c0       	rjmp	.+12     	; 0xde2 <vfprintf+0x26a>
     dd6:	28 e0       	ldi	r18, 0x08	; 8
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	05 c0       	rjmp	.+10     	; 0xde6 <vfprintf+0x26e>
     ddc:	20 e1       	ldi	r18, 0x10	; 16
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <vfprintf+0x26e>
     de2:	20 e1       	ldi	r18, 0x10	; 16
     de4:	32 e0       	ldi	r19, 0x02	; 2
     de6:	f8 01       	movw	r30, r16
     de8:	b7 fe       	sbrs	r11, 7
     dea:	07 c0       	rjmp	.+14     	; 0xdfa <vfprintf+0x282>
     dec:	60 81       	ld	r22, Z
     dee:	71 81       	ldd	r23, Z+1	; 0x01
     df0:	82 81       	ldd	r24, Z+2	; 0x02
     df2:	93 81       	ldd	r25, Z+3	; 0x03
     df4:	0c 5f       	subi	r16, 0xFC	; 252
     df6:	1f 4f       	sbci	r17, 0xFF	; 255
     df8:	06 c0       	rjmp	.+12     	; 0xe06 <vfprintf+0x28e>
     dfa:	60 81       	ld	r22, Z
     dfc:	71 81       	ldd	r23, Z+1	; 0x01
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 5f       	subi	r16, 0xFE	; 254
     e04:	1f 4f       	sbci	r17, 0xFF	; 255
     e06:	a3 01       	movw	r20, r6
     e08:	db d0       	rcall	.+438    	; 0xfc0 <__ultoa_invert>
     e0a:	88 2e       	mov	r8, r24
     e0c:	86 18       	sub	r8, r6
     e0e:	fb 2d       	mov	r31, r11
     e10:	ff 77       	andi	r31, 0x7F	; 127
     e12:	3f 2e       	mov	r3, r31
     e14:	36 fe       	sbrs	r3, 6
     e16:	0d c0       	rjmp	.+26     	; 0xe32 <vfprintf+0x2ba>
     e18:	23 2d       	mov	r18, r3
     e1a:	2e 7f       	andi	r18, 0xFE	; 254
     e1c:	a2 2e       	mov	r10, r18
     e1e:	89 14       	cp	r8, r9
     e20:	58 f4       	brcc	.+22     	; 0xe38 <vfprintf+0x2c0>
     e22:	34 fe       	sbrs	r3, 4
     e24:	0b c0       	rjmp	.+22     	; 0xe3c <vfprintf+0x2c4>
     e26:	32 fc       	sbrc	r3, 2
     e28:	09 c0       	rjmp	.+18     	; 0xe3c <vfprintf+0x2c4>
     e2a:	83 2d       	mov	r24, r3
     e2c:	8e 7e       	andi	r24, 0xEE	; 238
     e2e:	a8 2e       	mov	r10, r24
     e30:	05 c0       	rjmp	.+10     	; 0xe3c <vfprintf+0x2c4>
     e32:	b8 2c       	mov	r11, r8
     e34:	a3 2c       	mov	r10, r3
     e36:	03 c0       	rjmp	.+6      	; 0xe3e <vfprintf+0x2c6>
     e38:	b8 2c       	mov	r11, r8
     e3a:	01 c0       	rjmp	.+2      	; 0xe3e <vfprintf+0x2c6>
     e3c:	b9 2c       	mov	r11, r9
     e3e:	a4 fe       	sbrs	r10, 4
     e40:	0f c0       	rjmp	.+30     	; 0xe60 <vfprintf+0x2e8>
     e42:	fe 01       	movw	r30, r28
     e44:	e8 0d       	add	r30, r8
     e46:	f1 1d       	adc	r31, r1
     e48:	80 81       	ld	r24, Z
     e4a:	80 33       	cpi	r24, 0x30	; 48
     e4c:	21 f4       	brne	.+8      	; 0xe56 <vfprintf+0x2de>
     e4e:	9a 2d       	mov	r25, r10
     e50:	99 7e       	andi	r25, 0xE9	; 233
     e52:	a9 2e       	mov	r10, r25
     e54:	09 c0       	rjmp	.+18     	; 0xe68 <vfprintf+0x2f0>
     e56:	a2 fe       	sbrs	r10, 2
     e58:	06 c0       	rjmp	.+12     	; 0xe66 <vfprintf+0x2ee>
     e5a:	b3 94       	inc	r11
     e5c:	b3 94       	inc	r11
     e5e:	04 c0       	rjmp	.+8      	; 0xe68 <vfprintf+0x2f0>
     e60:	8a 2d       	mov	r24, r10
     e62:	86 78       	andi	r24, 0x86	; 134
     e64:	09 f0       	breq	.+2      	; 0xe68 <vfprintf+0x2f0>
     e66:	b3 94       	inc	r11
     e68:	a3 fc       	sbrc	r10, 3
     e6a:	10 c0       	rjmp	.+32     	; 0xe8c <vfprintf+0x314>
     e6c:	a0 fe       	sbrs	r10, 0
     e6e:	06 c0       	rjmp	.+12     	; 0xe7c <vfprintf+0x304>
     e70:	b2 14       	cp	r11, r2
     e72:	80 f4       	brcc	.+32     	; 0xe94 <vfprintf+0x31c>
     e74:	28 0c       	add	r2, r8
     e76:	92 2c       	mov	r9, r2
     e78:	9b 18       	sub	r9, r11
     e7a:	0d c0       	rjmp	.+26     	; 0xe96 <vfprintf+0x31e>
     e7c:	b2 14       	cp	r11, r2
     e7e:	58 f4       	brcc	.+22     	; 0xe96 <vfprintf+0x31e>
     e80:	b6 01       	movw	r22, r12
     e82:	80 e2       	ldi	r24, 0x20	; 32
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	60 d0       	rcall	.+192    	; 0xf48 <fputc>
     e88:	b3 94       	inc	r11
     e8a:	f8 cf       	rjmp	.-16     	; 0xe7c <vfprintf+0x304>
     e8c:	b2 14       	cp	r11, r2
     e8e:	18 f4       	brcc	.+6      	; 0xe96 <vfprintf+0x31e>
     e90:	2b 18       	sub	r2, r11
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <vfprintf+0x320>
     e94:	98 2c       	mov	r9, r8
     e96:	21 2c       	mov	r2, r1
     e98:	a4 fe       	sbrs	r10, 4
     e9a:	0f c0       	rjmp	.+30     	; 0xeba <vfprintf+0x342>
     e9c:	b6 01       	movw	r22, r12
     e9e:	80 e3       	ldi	r24, 0x30	; 48
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	52 d0       	rcall	.+164    	; 0xf48 <fputc>
     ea4:	a2 fe       	sbrs	r10, 2
     ea6:	16 c0       	rjmp	.+44     	; 0xed4 <vfprintf+0x35c>
     ea8:	a1 fc       	sbrc	r10, 1
     eaa:	03 c0       	rjmp	.+6      	; 0xeb2 <vfprintf+0x33a>
     eac:	88 e7       	ldi	r24, 0x78	; 120
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <vfprintf+0x33e>
     eb2:	88 e5       	ldi	r24, 0x58	; 88
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	b6 01       	movw	r22, r12
     eb8:	0c c0       	rjmp	.+24     	; 0xed2 <vfprintf+0x35a>
     eba:	8a 2d       	mov	r24, r10
     ebc:	86 78       	andi	r24, 0x86	; 134
     ebe:	51 f0       	breq	.+20     	; 0xed4 <vfprintf+0x35c>
     ec0:	a1 fe       	sbrs	r10, 1
     ec2:	02 c0       	rjmp	.+4      	; 0xec8 <vfprintf+0x350>
     ec4:	8b e2       	ldi	r24, 0x2B	; 43
     ec6:	01 c0       	rjmp	.+2      	; 0xeca <vfprintf+0x352>
     ec8:	80 e2       	ldi	r24, 0x20	; 32
     eca:	a7 fc       	sbrc	r10, 7
     ecc:	8d e2       	ldi	r24, 0x2D	; 45
     ece:	b6 01       	movw	r22, r12
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	3a d0       	rcall	.+116    	; 0xf48 <fputc>
     ed4:	89 14       	cp	r8, r9
     ed6:	30 f4       	brcc	.+12     	; 0xee4 <vfprintf+0x36c>
     ed8:	b6 01       	movw	r22, r12
     eda:	80 e3       	ldi	r24, 0x30	; 48
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	34 d0       	rcall	.+104    	; 0xf48 <fputc>
     ee0:	9a 94       	dec	r9
     ee2:	f8 cf       	rjmp	.-16     	; 0xed4 <vfprintf+0x35c>
     ee4:	8a 94       	dec	r8
     ee6:	f3 01       	movw	r30, r6
     ee8:	e8 0d       	add	r30, r8
     eea:	f1 1d       	adc	r31, r1
     eec:	80 81       	ld	r24, Z
     eee:	b6 01       	movw	r22, r12
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	2a d0       	rcall	.+84     	; 0xf48 <fputc>
     ef4:	81 10       	cpse	r8, r1
     ef6:	f6 cf       	rjmp	.-20     	; 0xee4 <vfprintf+0x36c>
     ef8:	22 20       	and	r2, r2
     efa:	09 f4       	brne	.+2      	; 0xefe <vfprintf+0x386>
     efc:	4e ce       	rjmp	.-868    	; 0xb9a <vfprintf+0x22>
     efe:	b6 01       	movw	r22, r12
     f00:	80 e2       	ldi	r24, 0x20	; 32
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	21 d0       	rcall	.+66     	; 0xf48 <fputc>
     f06:	2a 94       	dec	r2
     f08:	f7 cf       	rjmp	.-18     	; 0xef8 <vfprintf+0x380>
     f0a:	f6 01       	movw	r30, r12
     f0c:	86 81       	ldd	r24, Z+6	; 0x06
     f0e:	97 81       	ldd	r25, Z+7	; 0x07
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <vfprintf+0x39e>
     f12:	8f ef       	ldi	r24, 0xFF	; 255
     f14:	9f ef       	ldi	r25, 0xFF	; 255
     f16:	2b 96       	adiw	r28, 0x0b	; 11
     f18:	e2 e1       	ldi	r30, 0x12	; 18
     f1a:	cc c0       	rjmp	.+408    	; 0x10b4 <__epilogue_restores__>

00000f1c <strnlen_P>:
     f1c:	fc 01       	movw	r30, r24
     f1e:	05 90       	lpm	r0, Z+
     f20:	61 50       	subi	r22, 0x01	; 1
     f22:	70 40       	sbci	r23, 0x00	; 0
     f24:	01 10       	cpse	r0, r1
     f26:	d8 f7       	brcc	.-10     	; 0xf1e <strnlen_P+0x2>
     f28:	80 95       	com	r24
     f2a:	90 95       	com	r25
     f2c:	8e 0f       	add	r24, r30
     f2e:	9f 1f       	adc	r25, r31
     f30:	08 95       	ret

00000f32 <strnlen>:
     f32:	fc 01       	movw	r30, r24
     f34:	61 50       	subi	r22, 0x01	; 1
     f36:	70 40       	sbci	r23, 0x00	; 0
     f38:	01 90       	ld	r0, Z+
     f3a:	01 10       	cpse	r0, r1
     f3c:	d8 f7       	brcc	.-10     	; 0xf34 <strnlen+0x2>
     f3e:	80 95       	com	r24
     f40:	90 95       	com	r25
     f42:	8e 0f       	add	r24, r30
     f44:	9f 1f       	adc	r25, r31
     f46:	08 95       	ret

00000f48 <fputc>:
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	cf 93       	push	r28
     f4e:	df 93       	push	r29
     f50:	fb 01       	movw	r30, r22
     f52:	23 81       	ldd	r18, Z+3	; 0x03
     f54:	21 fd       	sbrc	r18, 1
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <fputc+0x16>
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	2c c0       	rjmp	.+88     	; 0xfb6 <fputc+0x6e>
     f5e:	22 ff       	sbrs	r18, 2
     f60:	16 c0       	rjmp	.+44     	; 0xf8e <fputc+0x46>
     f62:	46 81       	ldd	r20, Z+6	; 0x06
     f64:	57 81       	ldd	r21, Z+7	; 0x07
     f66:	24 81       	ldd	r18, Z+4	; 0x04
     f68:	35 81       	ldd	r19, Z+5	; 0x05
     f6a:	42 17       	cp	r20, r18
     f6c:	53 07       	cpc	r21, r19
     f6e:	44 f4       	brge	.+16     	; 0xf80 <fputc+0x38>
     f70:	a0 81       	ld	r26, Z
     f72:	b1 81       	ldd	r27, Z+1	; 0x01
     f74:	9d 01       	movw	r18, r26
     f76:	2f 5f       	subi	r18, 0xFF	; 255
     f78:	3f 4f       	sbci	r19, 0xFF	; 255
     f7a:	31 83       	std	Z+1, r19	; 0x01
     f7c:	20 83       	st	Z, r18
     f7e:	8c 93       	st	X, r24
     f80:	26 81       	ldd	r18, Z+6	; 0x06
     f82:	37 81       	ldd	r19, Z+7	; 0x07
     f84:	2f 5f       	subi	r18, 0xFF	; 255
     f86:	3f 4f       	sbci	r19, 0xFF	; 255
     f88:	37 83       	std	Z+7, r19	; 0x07
     f8a:	26 83       	std	Z+6, r18	; 0x06
     f8c:	14 c0       	rjmp	.+40     	; 0xfb6 <fputc+0x6e>
     f8e:	8b 01       	movw	r16, r22
     f90:	ec 01       	movw	r28, r24
     f92:	fb 01       	movw	r30, r22
     f94:	00 84       	ldd	r0, Z+8	; 0x08
     f96:	f1 85       	ldd	r31, Z+9	; 0x09
     f98:	e0 2d       	mov	r30, r0
     f9a:	09 95       	icall
     f9c:	89 2b       	or	r24, r25
     f9e:	e1 f6       	brne	.-72     	; 0xf58 <fputc+0x10>
     fa0:	d8 01       	movw	r26, r16
     fa2:	16 96       	adiw	r26, 0x06	; 6
     fa4:	8d 91       	ld	r24, X+
     fa6:	9c 91       	ld	r25, X
     fa8:	17 97       	sbiw	r26, 0x07	; 7
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	17 96       	adiw	r26, 0x07	; 7
     fae:	9c 93       	st	X, r25
     fb0:	8e 93       	st	-X, r24
     fb2:	16 97       	sbiw	r26, 0x06	; 6
     fb4:	ce 01       	movw	r24, r28
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	08 95       	ret

00000fc0 <__ultoa_invert>:
     fc0:	fa 01       	movw	r30, r20
     fc2:	aa 27       	eor	r26, r26
     fc4:	28 30       	cpi	r18, 0x08	; 8
     fc6:	51 f1       	breq	.+84     	; 0x101c <__ultoa_invert+0x5c>
     fc8:	20 31       	cpi	r18, 0x10	; 16
     fca:	81 f1       	breq	.+96     	; 0x102c <__ultoa_invert+0x6c>
     fcc:	e8 94       	clt
     fce:	6f 93       	push	r22
     fd0:	6e 7f       	andi	r22, 0xFE	; 254
     fd2:	6e 5f       	subi	r22, 0xFE	; 254
     fd4:	7f 4f       	sbci	r23, 0xFF	; 255
     fd6:	8f 4f       	sbci	r24, 0xFF	; 255
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	af 4f       	sbci	r26, 0xFF	; 255
     fdc:	b1 e0       	ldi	r27, 0x01	; 1
     fde:	3e d0       	rcall	.+124    	; 0x105c <__ultoa_invert+0x9c>
     fe0:	b4 e0       	ldi	r27, 0x04	; 4
     fe2:	3c d0       	rcall	.+120    	; 0x105c <__ultoa_invert+0x9c>
     fe4:	67 0f       	add	r22, r23
     fe6:	78 1f       	adc	r23, r24
     fe8:	89 1f       	adc	r24, r25
     fea:	9a 1f       	adc	r25, r26
     fec:	a1 1d       	adc	r26, r1
     fee:	68 0f       	add	r22, r24
     ff0:	79 1f       	adc	r23, r25
     ff2:	8a 1f       	adc	r24, r26
     ff4:	91 1d       	adc	r25, r1
     ff6:	a1 1d       	adc	r26, r1
     ff8:	6a 0f       	add	r22, r26
     ffa:	71 1d       	adc	r23, r1
     ffc:	81 1d       	adc	r24, r1
     ffe:	91 1d       	adc	r25, r1
    1000:	a1 1d       	adc	r26, r1
    1002:	20 d0       	rcall	.+64     	; 0x1044 <__ultoa_invert+0x84>
    1004:	09 f4       	brne	.+2      	; 0x1008 <__ultoa_invert+0x48>
    1006:	68 94       	set
    1008:	3f 91       	pop	r19
    100a:	2a e0       	ldi	r18, 0x0A	; 10
    100c:	26 9f       	mul	r18, r22
    100e:	11 24       	eor	r1, r1
    1010:	30 19       	sub	r19, r0
    1012:	30 5d       	subi	r19, 0xD0	; 208
    1014:	31 93       	st	Z+, r19
    1016:	de f6       	brtc	.-74     	; 0xfce <__ultoa_invert+0xe>
    1018:	cf 01       	movw	r24, r30
    101a:	08 95       	ret
    101c:	46 2f       	mov	r20, r22
    101e:	47 70       	andi	r20, 0x07	; 7
    1020:	40 5d       	subi	r20, 0xD0	; 208
    1022:	41 93       	st	Z+, r20
    1024:	b3 e0       	ldi	r27, 0x03	; 3
    1026:	0f d0       	rcall	.+30     	; 0x1046 <__ultoa_invert+0x86>
    1028:	c9 f7       	brne	.-14     	; 0x101c <__ultoa_invert+0x5c>
    102a:	f6 cf       	rjmp	.-20     	; 0x1018 <__ultoa_invert+0x58>
    102c:	46 2f       	mov	r20, r22
    102e:	4f 70       	andi	r20, 0x0F	; 15
    1030:	40 5d       	subi	r20, 0xD0	; 208
    1032:	4a 33       	cpi	r20, 0x3A	; 58
    1034:	18 f0       	brcs	.+6      	; 0x103c <__ultoa_invert+0x7c>
    1036:	49 5d       	subi	r20, 0xD9	; 217
    1038:	31 fd       	sbrc	r19, 1
    103a:	40 52       	subi	r20, 0x20	; 32
    103c:	41 93       	st	Z+, r20
    103e:	02 d0       	rcall	.+4      	; 0x1044 <__ultoa_invert+0x84>
    1040:	a9 f7       	brne	.-22     	; 0x102c <__ultoa_invert+0x6c>
    1042:	ea cf       	rjmp	.-44     	; 0x1018 <__ultoa_invert+0x58>
    1044:	b4 e0       	ldi	r27, 0x04	; 4
    1046:	a6 95       	lsr	r26
    1048:	97 95       	ror	r25
    104a:	87 95       	ror	r24
    104c:	77 95       	ror	r23
    104e:	67 95       	ror	r22
    1050:	ba 95       	dec	r27
    1052:	c9 f7       	brne	.-14     	; 0x1046 <__ultoa_invert+0x86>
    1054:	00 97       	sbiw	r24, 0x00	; 0
    1056:	61 05       	cpc	r22, r1
    1058:	71 05       	cpc	r23, r1
    105a:	08 95       	ret
    105c:	9b 01       	movw	r18, r22
    105e:	ac 01       	movw	r20, r24
    1060:	0a 2e       	mov	r0, r26
    1062:	06 94       	lsr	r0
    1064:	57 95       	ror	r21
    1066:	47 95       	ror	r20
    1068:	37 95       	ror	r19
    106a:	27 95       	ror	r18
    106c:	ba 95       	dec	r27
    106e:	c9 f7       	brne	.-14     	; 0x1062 <__ultoa_invert+0xa2>
    1070:	62 0f       	add	r22, r18
    1072:	73 1f       	adc	r23, r19
    1074:	84 1f       	adc	r24, r20
    1076:	95 1f       	adc	r25, r21
    1078:	a0 1d       	adc	r26, r0
    107a:	08 95       	ret

0000107c <__prologue_saves__>:
    107c:	2f 92       	push	r2
    107e:	3f 92       	push	r3
    1080:	4f 92       	push	r4
    1082:	5f 92       	push	r5
    1084:	6f 92       	push	r6
    1086:	7f 92       	push	r7
    1088:	8f 92       	push	r8
    108a:	9f 92       	push	r9
    108c:	af 92       	push	r10
    108e:	bf 92       	push	r11
    1090:	cf 92       	push	r12
    1092:	df 92       	push	r13
    1094:	ef 92       	push	r14
    1096:	ff 92       	push	r15
    1098:	0f 93       	push	r16
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	ca 1b       	sub	r28, r26
    10a6:	db 0b       	sbc	r29, r27
    10a8:	0f b6       	in	r0, 0x3f	; 63
    10aa:	f8 94       	cli
    10ac:	de bf       	out	0x3e, r29	; 62
    10ae:	0f be       	out	0x3f, r0	; 63
    10b0:	cd bf       	out	0x3d, r28	; 61
    10b2:	09 94       	ijmp

000010b4 <__epilogue_restores__>:
    10b4:	2a 88       	ldd	r2, Y+18	; 0x12
    10b6:	39 88       	ldd	r3, Y+17	; 0x11
    10b8:	48 88       	ldd	r4, Y+16	; 0x10
    10ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    10bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    10be:	7d 84       	ldd	r7, Y+13	; 0x0d
    10c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    10c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    10c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    10c6:	b9 84       	ldd	r11, Y+9	; 0x09
    10c8:	c8 84       	ldd	r12, Y+8	; 0x08
    10ca:	df 80       	ldd	r13, Y+7	; 0x07
    10cc:	ee 80       	ldd	r14, Y+6	; 0x06
    10ce:	fd 80       	ldd	r15, Y+5	; 0x05
    10d0:	0c 81       	ldd	r16, Y+4	; 0x04
    10d2:	1b 81       	ldd	r17, Y+3	; 0x03
    10d4:	aa 81       	ldd	r26, Y+2	; 0x02
    10d6:	b9 81       	ldd	r27, Y+1	; 0x01
    10d8:	ce 0f       	add	r28, r30
    10da:	d1 1d       	adc	r29, r1
    10dc:	0f b6       	in	r0, 0x3f	; 63
    10de:	f8 94       	cli
    10e0:	de bf       	out	0x3e, r29	; 62
    10e2:	0f be       	out	0x3f, r0	; 63
    10e4:	cd bf       	out	0x3d, r28	; 61
    10e6:	ed 01       	movw	r28, r26
    10e8:	08 95       	ret

000010ea <_exit>:
    10ea:	f8 94       	cli

000010ec <__stop_program>:
    10ec:	ff cf       	rjmp	.-2      	; 0x10ec <__stop_program>
